<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DokanNet</name>
    </assembly>
    <members>
        <member name="T:DokanNet.BufferPool">
            <summary>
            Simple buffer pool for buffers used by <see cref="M:DokanNet.IDokanOperations.ReadFile(System.String,System.Byte[],System.Int32@,System.Int64,DokanNet.IDokanFileInfo)"/> and
            <see cref="M:DokanNet.IDokanOperations.WriteFile(System.String,System.Byte[],System.Int32@,System.Int64,DokanNet.IDokanFileInfo)"/> to avoid excessive Gen2 garbage collections due to large buffer
            allocation on the large object heap (LOH).
            
            This pool is a bit different than say System.Buffers.ArrayPool(T) in that <see cref="M:DokanNet.BufferPool.RentBuffer(System.UInt32,DokanNet.Logging.ILogger)" /> only returns
            exact size buffers. This is because the Read/WriteFile APIs only take a byte[] array as a parameter, not
            buffer and length. As such, it would be back compat breaking to return buffers that are bigger than the
            data length. To limit the amount of memory consumption, we only buffer sizes that are powers of 2 because
            common buffer sizes are typically that. There isn't anything preventing pooling buffers of any size if
            we find that there's another common buffer size in use. Only pool buffers 1MB or smaller and only
            up to 10 buffers of each size for further memory capping.
            </summary>
        </member>
        <member name="M:DokanNet.BufferPool.#ctor(System.UInt32,System.UInt32)">
            <summary>
            Constructs a new buffer pool.
            </summary>
            <param name="maxBufferSize">The max size (bytes) buffer that will be cached. </param>
            <param name="maxBuffersPerBufferSize">Maximum number of buffers cached per buffer size.</param>
        </member>
        <member name="P:DokanNet.BufferPool.Default">
            <summary>
            Default, process-wide buffer pool instance.
            </summary>
        </member>
        <member name="M:DokanNet.BufferPool.Clear">
            <summary>
            Clears the buffer pool by releasing all buffers.
            </summary>
        </member>
        <member name="P:DokanNet.BufferPool.ServedBytes">
            <summary>
            Number of bytes served over the pool's lifetime.
            </summary>
        </member>
        <member name="M:DokanNet.BufferPool.RentBuffer(System.UInt32,DokanNet.Logging.ILogger)">
            <summary>
            Gets a buffer from the buffer pool of the exact specified size.
            If the size if not a power of 2, a buffer is still returned, but it is not poolable.
            </summary>
            <param name="bufferSize">The size of buffer requested.</param>
            <param name="logger">Logger for debug spew about what the buffer pool did.</param>
            <returns>The byte[] buffer.</returns>
        </member>
        <member name="M:DokanNet.BufferPool.ReturnBuffer(System.Byte[],DokanNet.Logging.ILogger)">
            <summary>
            Returns a previously rented buffer to the buffer pool.
            If the buffer size is not an exact power of 2, the buffer is ignored.
            </summary>
            <param name="buffer">The buffer to return.</param>
            <param name="logger">Logger for debug spew about what the buffer pool did.</param>
        </member>
        <member name="M:DokanNet.BufferPool.GetPoolIndex(System.UInt32)">
            <summary>
            Computes the pool index given a buffer size. The pool index is log2(size),
            if size is a power of 2. If size is not a power of 2, -1 is returned (invalid pool index).
            </summary>
            <param name="bufferSize">Buffer size in bytes.</param>
            <returns>The pool index, log2(number), or -1 if bufferSize is not a power of 2.</returns>
        </member>
        <member name="T:DokanNet.Dokan">
            <summary>
            Helper methods to %Dokan.
            </summary>
        </member>
        <member name="M:DokanNet.Dokan.#ctor(DokanNet.Logging.ILogger)">
            <summary>
            Initialize all required Dokan internal resources.
            
            This needs to be called only once before trying to use <see cref="M:DokanNet.DokanInstance.#ctor(DokanNet.Logging.ILogger,DokanNet.Native.DOKAN_OPTIONS,DokanNet.Dokan,DokanNet.IDokanOperations)"/> for the first time.
            Otherwise both will fail and raise an exception.
            </summary>
            <param name="logger"><see cref="T:DokanNet.Logging.ILogger"/> that will log all DokanNet debug informations.</param>
        </member>
        <member name="M:DokanNet.Dokan.Unmount(System.Char)">
            <summary>
            Unmount a dokan device from a driver letter.
            </summary>
            <param name="driveLetter">Driver letter to unmount.</param>
            <returns><c>true</c> if device was unmount 
            -or- <c>false</c> in case of failure or device not found.</returns>
        </member>
        <member name="M:DokanNet.Dokan.RemoveMountPoint(System.String)">
            <summary>
            Unmount a dokan device from a mount point.
            </summary>
            <param name="mountPoint">Mount point to unmount (<c>Z</c>, <c>Z:</c>, <c>Z:\\</c>, <c>Z:\\MyMountPoint</c>).</param>
            <returns><c>true</c> if device was unmount 
            -or- <c>false</c> in case of failure or device not found.</returns>
        </member>
        <member name="P:DokanNet.Dokan.Version">
            <summary>
            Retrieve native dokan dll version supported.
            </summary>
            <returns>Return native dokan dll version supported.</returns>
        </member>
        <member name="P:DokanNet.Dokan.DriverVersion">
            <summary>
            Retrieve native dokan driver version supported.
            </summary>
            <returns>Return native dokan driver version supported.</returns>
        </member>
        <member name="T:DokanNet.Dokan.Notify">
             <summary>
             Dokan User FS file-change notifications
             </summary>
             <remarks> If <see cref="F:DokanNet.DokanOptions.EnableNotificationAPI"/> is passed to <see cref="F:DokanNet.Native.DOKAN_OPTIONS.Options"/>,
             the application implementing the user file system can notify
             the Dokan kernel driver of external file- and directory-changes.
             
             For example, the mirror application can notify the driver about
             changes made in the mirrored directory so that those changes will
             be automatically reflected in the implemented mirror file system.
             
             This requires the filePath passed to the respective methods
             to include the absolute path of the changed file including the drive-letter
             and the path to the mount point, e.g. "C:\Dokan\ChangedFile.txt".
             
             These functions SHOULD NOT be called from within the implemented
             file system and thus be independent of any Dokan file system operation.
            </remarks>
        </member>
        <member name="M:DokanNet.Dokan.Notify.Create(DokanNet.DokanInstance,System.String,System.Boolean)">
            <summary>
            Notify Dokan that a file or directory has been created.
            </summary>
            <param name="dokanInstance">The dokan mount context created by <see cref="M:DokanNet.DokanInstance.#ctor(DokanNet.Logging.ILogger,DokanNet.Native.DOKAN_OPTIONS,DokanNet.Dokan,DokanNet.IDokanOperations)"/></param>
            <param name="filePath">Absolute path to the file or directory, including the mount-point of the file system.</param>
            <param name="isDirectory">Indicates if the path is a directory.</param>
            <returns>true if the notification succeeded.</returns>
        </member>
        <member name="M:DokanNet.Dokan.Notify.Delete(DokanNet.DokanInstance,System.String,System.Boolean)">
            <summary>
            Notify Dokan that a file or directory has been deleted.
            </summary>
            <param name="dokanInstance">The dokan mount context created by <see cref="M:DokanNet.DokanInstance.#ctor(DokanNet.Logging.ILogger,DokanNet.Native.DOKAN_OPTIONS,DokanNet.Dokan,DokanNet.IDokanOperations)"/></param>
            <param name="filePath">Absolute path to the file or directory, including the mount-point of the file system.</param>
            <param name="isDirectory">Indicates if the path is a directory.</param>
            <returns>true if notification succeeded.</returns>
            <remarks><see cref="F:DokanNet.DokanOptions.EnableNotificationAPI"/> must be set in the mount options for this to succeed.</remarks>
        </member>
        <member name="M:DokanNet.Dokan.Notify.Update(DokanNet.DokanInstance,System.String)">
            <summary>
            Notify Dokan that file or directory attributes have changed.
            </summary>
            <param name="dokanInstance">The dokan mount context created by <see cref="M:DokanNet.DokanInstance.#ctor(DokanNet.Logging.ILogger,DokanNet.Native.DOKAN_OPTIONS,DokanNet.Dokan,DokanNet.IDokanOperations)"/></param>
            <param name="filePath">Absolute path to the file or directory, including the mount-point of the file system.</param>
            <returns>true if notification succeeded.</returns>
            <remarks><see cref="F:DokanNet.DokanOptions.EnableNotificationAPI"/> must be set in the mount options for this to succeed.</remarks>
        </member>
        <member name="M:DokanNet.Dokan.Notify.XAttrUpdate(DokanNet.DokanInstance,System.String)">
            <summary>
            Notify Dokan that file or directory extended attributes have changed.
            </summary>
            <param name="dokanInstance">The dokan mount context created by <see cref="M:DokanNet.DokanInstance.#ctor(DokanNet.Logging.ILogger,DokanNet.Native.DOKAN_OPTIONS,DokanNet.Dokan,DokanNet.IDokanOperations)"/></param>
            <param name="filePath">Absolute path to the file or directory, including the mount-point of the file system.</param>
            <returns>true if notification succeeded.</returns>
            <remarks><see cref="F:DokanNet.DokanOptions.EnableNotificationAPI"/> must be set in the mount options for this to succeed.</remarks>
        </member>
        <member name="M:DokanNet.Dokan.Notify.Rename(DokanNet.DokanInstance,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Notify Dokan that a file or directory has been renamed.
            This method supports in-place rename for file/directory within the same parent.
            </summary>
            <param name="dokanInstance">The dokan mount context created by <see cref="M:DokanNet.DokanInstance.#ctor(DokanNet.Logging.ILogger,DokanNet.Native.DOKAN_OPTIONS,DokanNet.Dokan,DokanNet.IDokanOperations)"/></param>
            <param name="oldPath">Old, absolute path to the file or directory, including the mount-point of the file system.</param>
            <param name="newPath">New, absolute path to the file or directory, including the mount-point of the file system.</param>
            <param name="isDirectory">Indicates if the path is a directory.</param>
            <param name="isInSameDirectory">Indicates if the file or directory have the same parent directory.</param>
            <returns>true if notification succeeded.</returns>
            <remarks><see cref="F:DokanNet.DokanOptions.EnableNotificationAPI"/> must be set in the mount options for this to succeed.</remarks>
        </member>
        <member name="M:DokanNet.Dokan.Dispose(System.Boolean)">
            <summary>
            Dispose the native Dokan Library resources
            </summary>
            <param name="disposing">Whether this was called from <see cref="M:DokanNet.Dokan.Dispose"/></param>
        </member>
        <member name="M:DokanNet.Dokan.Dispose">
            <summary>
            Dispose the native Dokan Library resources
            </summary>
        </member>
        <member name="M:DokanNet.Dokan.Finalize">
            <summary>
            Override finalizer only if 'Dispose(bool disposing)' has code to free unmanaged resources
            </summary>
        </member>
        <member name="T:DokanNet.DokanException">
            <summary>
            The dokan exception.
            </summary>
        </member>
        <member name="M:DokanNet.DokanException.#ctor(DokanNet.DokanStatus)">
            <summary>
            Initializes a new instance of the <see cref="T:DokanNet.DokanException"/> class with a <see cref="P:System.Exception.HResult"/>.
            </summary>
            <param name="status">
            The error status also written to <see cref="P:System.Exception.HResult"/>.
            </param>
        </member>
        <member name="M:DokanNet.DokanException.#ctor(DokanNet.DokanStatus,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DokanNet.DokanException"/> class with a <see cref="P:System.Exception.HResult"/>.
            </summary>
            <param name="status">
            The error status also written to <see cref="P:System.Exception.HResult"/>.
            </param>
            <param name="message">
            The error message.
            </param>
        </member>
        <member name="P:DokanNet.DokanException.ErrorStatus">
            <summary>
            Dokan error status <see cref="T:DokanNet.DokanStatus"/>.
            </summary>
        </member>
        <member name="T:DokanNet.DokanFileInfo">
            <summary>
            %Dokan file information on the current operation.
            </summary>
            <remarks>
            This class cannot be instantiated in C#, it is created by the kernel %Dokan driver.
            This is the same structure as <c>_DOKAN_FILE_INFO</c> (dokan.h) in the C version of Dokan.
            </remarks>
        </member>
        <member name="F:DokanNet.DokanFileInfo._dokanContext">
            <summary>
            Used internally, never modify.
            </summary>
        </member>
        <member name="F:DokanNet.DokanFileInfo._dokanOptions">
            <summary>
            A pointer to the <see cref="T:DokanNet.Native.DOKAN_OPTIONS"/> which was passed to <see cref="M:DokanNet.Native.NativeMethods.DokanMain(DokanNet.Native.DOKAN_OPTIONS,DokanNet.Native.DOKAN_OPERATIONS)"/>.
            </summary>
        </member>
        <member name="F:DokanNet.DokanFileInfo._processingContext">
            <summary>
            Reserved. Used internally by Dokan library. Never modify.
            If the processing for the event requires extra data to be associated with it
            then a pointer to that data can be placed here
            </summary>
        </member>
        <member name="M:DokanNet.DokanFileInfo.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:DokanNet.DokanFileInfo"/> class from being created. 
            The class is created by the %Dokan kernel driver.
            </summary>
        </member>
        <member name="P:DokanNet.DokanFileInfo.Context">
            <summary>
            Gets or sets context that can be used to carry information between operation.
            The Context can carry whatever type like <c><see cref="T:System.IO.FileStream"/></c>, <c>struct</c>, <c>int</c>,
            or internal reference that will help the implementation understand the request context of the event.
            </summary>
        </member>
        <member name="P:DokanNet.DokanFileInfo.ProcessId">
            <summary>
            Process id for the thread that originally requested a given I/O
            operation.
            </summary>
        </member>
        <member name="P:DokanNet.DokanFileInfo.IsDirectory">
            <summary>
            Gets or sets a value indicating whether it requesting a directory
            file. Must be set in <see cref="M:DokanNet.IDokanOperations.CreateFile(System.String,DokanNet.FileAccess,System.IO.FileShare,System.IO.FileMode,System.IO.FileOptions,System.IO.FileAttributes,DokanNet.IDokanFileInfo)"/> if
            the file appear to be a folder.
            </summary>
        </member>
        <member name="P:DokanNet.DokanFileInfo.DeleteOnClose">
            <summary>
            Gets or sets a value indicating whether the file has to be delete
            during the <see cref="M:DokanNet.IDokanOperations.Cleanup(System.String,DokanNet.IDokanFileInfo)"/> event.
            </summary>
        </member>
        <member name="P:DokanNet.DokanFileInfo.PagingIo">
            <summary>
            Read or write is paging IO.
            </summary>
        </member>
        <member name="P:DokanNet.DokanFileInfo.SynchronousIo">
            <summary>
            Read or write is synchronous IO.
            </summary>
        </member>
        <member name="P:DokanNet.DokanFileInfo.NoCache">
            <summary>
            Read or write directly from data source without cache.
            </summary>
        </member>
        <member name="P:DokanNet.DokanFileInfo.WriteToEndOfFile">
            <summary>
            If <c>true</c>, write to the current end of file instead 
            of using the <c>Offset</c> parameter.
            </summary>
        </member>
        <member name="M:DokanNet.DokanFileInfo.GetRequestor">
            <summary>
            This method needs to be called in <see cref="M:DokanNet.IDokanOperations.CreateFile(System.String,DokanNet.FileAccess,System.IO.FileShare,System.IO.FileMode,System.IO.FileOptions,System.IO.FileAttributes,DokanNet.IDokanFileInfo)"/>.
            </summary>
            <returns>An <c><see cref="T:System.Security.Principal.WindowsIdentity"/></c> with the access token, 
            -or- <c>null</c> if the operation was not successful.</returns>
        </member>
        <member name="M:DokanNet.DokanFileInfo.TryResetTimeout(System.Int32)">
            <summary>
            Extends the time out of the current IO operation in driver.
            </summary>
            <param name="milliseconds">Number of milliseconds to extend with.</param>
            <returns>If the operation was successful.</returns>
        </member>
        <member name="M:DokanNet.DokanFileInfo.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:DokanNet.DokanHandle">
            <summary>
            This class wraps a native DOKAN_HANDLE.
            
            Since this class derives form SafeHandle, it is automatically marshalled as
            the native handle it represents to and from native code in for example P/Invoke
            calls. It also uses reference counting and guaranteed to stay alive during such calls.
            <see cref="T:System.Runtime.InteropServices.SafeHandle"/>
            </summary>
        </member>
        <member name="M:DokanNet.DokanHandle.#ctor(System.Boolean)">
            <summary>
            Initializes a new empty instance, specifying whether the handle is to be reliably released.
            Used internally by native marshaller and not intended to be used directly from user code.
            </summary>
            <param name="ownsHandle">true to reliably release the handle during the finalization phase; false to prevent
            reliable release (not recommended).</param>
        </member>
        <member name="M:DokanNet.DokanHandle.#ctor">
            <summary>
            Initializes an empty instance. Used internally by native marshaller and
            not intended to be used directly from user code.
            </summary>
        </member>
        <member name="M:DokanNet.DokanHandle.ReleaseHandle">
            <summary>
            Releases the native DOKAN_HANDLE wrapped by this instance.
            </summary>
            <returns>Always returns true</returns>
        </member>
        <member name="T:DokanNet.DokanHelper">
            <summary>
            %Dokan functions helpers for user <see cref="T:DokanNet.IDokanOperations"/> implementation.
            </summary>
        </member>
        <member name="F:DokanNet.DokanHelper.DOS_STAR">
            <summary>
            Matches zero or more characters until encountering and matching the final . in the name.
            </summary>
        </member>
        <member name="F:DokanNet.DokanHelper.DOS_QM">
            <summary>
            Matches any single character or, upon encountering a period or end
            of name string, advances the expression to the end of the set of
            contiguous DOS_QMs.
            </summary>
        </member>
        <member name="F:DokanNet.DokanHelper.DOS_DOT">
            <summary>
            Matches either a period or zero characters beyond the name string.
            </summary>
        </member>
        <member name="F:DokanNet.DokanHelper.ASTERISK">
            <summary>
            Matches zero or more characters.
            </summary>
        </member>
        <member name="F:DokanNet.DokanHelper.QUESTION_MARK">
            <summary>
            Matches a single character.
            </summary>
        </member>
        <member name="M:DokanNet.DokanHelper.DokanIsNameInExpression(System.String,System.String,System.Boolean)">
            <summary>
            Check whether <paramref name="name">Name</paramref> matches <paramref name="expression">Expression</paramref>.
            </summary>
            <remarks>
            This method is mainly used in <see cref="M:DokanNet.IDokanOperations.FindFilesWithPattern(System.String,System.String,System.Collections.Generic.IList{DokanNet.FileInformation}@,DokanNet.IDokanFileInfo)"/> to filter a list of possible files.
            For example "F0_&lt;&quot;*" match "f0_001.txt"
            \see <a href="http://msdn.microsoft.com/en-us/library/ff546850(v=VS.85).aspx">See FsRtlIsNameInExpression routine (MSDN)</a>
            </remarks>
            <param name="expression">The matching pattern. Can contain: ?, *, &lt;, &quot;, &gt;.</param>
            <param name="name">The string that will be tested.</param>
            <param name="ignoreCase">When set to true a case insensitive match will be performed.</param>
            <returns>Returns true if Expression match Name, false otherwise.</returns>
        </member>
        <member name="T:DokanNet.DokanInstance">
            <summary>
            Created by <see cref="M:DokanNet.DokanInstanceBuilder.Build(DokanNet.IDokanOperations)"/>.
            It holds all the resources required to be alive for the time of the mount.
            </summary>
        </member>
        <member name="P:DokanNet.DokanInstance.IsDisposed">
            <summary>
            Whether the object was already disposed.
            </summary>
        </member>
        <member name="M:DokanNet.DokanInstance.#ctor(DokanNet.Logging.ILogger,DokanNet.Native.DOKAN_OPTIONS,DokanNet.Dokan,DokanNet.IDokanOperations)">
            <summary>
            Mount the filesystem described by <see cref="T:DokanNet.Native.DOKAN_OPTIONS"/>.
            <see cref="T:DokanNet.IDokanOperations"/> will start to received operations from the system and applications for this device.
            See <see cref="T:DokanNet.DokanInstanceBuilder"/>
            </summary>
        </member>
        <member name="M:DokanNet.DokanInstance.Dispose(System.Boolean)">
            <summary>
            Dispose the native Dokan Library resources
            </summary>
            <param name="disposing">Whether this was called from <see cref="M:DokanNet.DokanInstance.Dispose"/></param>
        </member>
        <member name="M:DokanNet.DokanInstance.Finalize">
            <summary>
            Destructor that force dispose
            </summary>
        </member>
        <member name="M:DokanNet.DokanInstance.Dispose">
            <summary>
            Dispose the native Dokan Library resources
            </summary>
        </member>
        <member name="T:DokanNet.DokanInstanceBuilder">
            <summary>
            Dokan FileSystem build helper. Allows to create one or multiple <see cref="T:DokanNet.DokanInstance"/> based on a given configuration.
            </summary>
        </member>
        <member name="T:DokanNet.DokanInstanceBuilder.OptionsConfigurationDelegate">
            <summary>
            Delegate used by <see cref="M:DokanNet.DokanInstanceBuilder.ConfigureOptions(DokanNet.DokanInstanceBuilder.OptionsConfigurationDelegate)"/> to customize th internal <see cref="T:DokanNet.Native.DOKAN_OPTIONS"/>.
            </summary>
        </member>
        <member name="F:DokanNet.DokanInstanceBuilder.DOKAN_VERSION">
            <summary>
            The Dokan version that DokanNet is compatible with.
            </summary>
            <see cref="F:DokanNet.Native.DOKAN_OPTIONS.Version"/>
        </member>
        <member name="M:DokanNet.DokanInstanceBuilder.#ctor(DokanNet.Dokan)">
            <summary>
            Constructure an object with a <see cref="T:DokanNet.Logging.NullLogger"/> and default <see cref="T:DokanNet.Native.DOKAN_OPTIONS"/> that will use the given <paramref name="dokan"/>.
            </summary>
        </member>
        <member name="M:DokanNet.DokanInstanceBuilder.ConfigureLogger(System.Func{DokanNet.Logging.ILogger})">
            <summary>
            Allows to set a custom <see cref="T:DokanNet.Logging.ILogger"/> like <see cref="T:DokanNet.Logging.Logger"/>, <see cref="T:DokanNet.Logging.TraceLogger"/> to be used
            for the instance created by <see cref="M:DokanNet.DokanInstanceBuilder.Build(DokanNet.IDokanOperations)"/>.
            </summary>
        </member>
        <member name="M:DokanNet.DokanInstanceBuilder.ConfigureOptions(DokanNet.DokanInstanceBuilder.OptionsConfigurationDelegate)">
            <summary>
            Allows to personalize the <see cref="T:DokanNet.Native.DOKAN_OPTIONS"/> use for <see cref="M:DokanNet.DokanInstanceBuilder.Build(DokanNet.IDokanOperations)"/>.
            </summary>
        </member>
        <member name="M:DokanNet.DokanInstanceBuilder.Validate">
            <summary>
            Verify that the provided configuration is valid.
            Note: Has no effect for now.
            </summary>
        </member>
        <member name="M:DokanNet.DokanInstanceBuilder.Build(DokanNet.IDokanOperations)">
            <summary>
            Create a <see cref="T:DokanNet.DokanInstance"/> based on the previously provided information
            through <see cref="M:DokanNet.DokanInstanceBuilder.ConfigureOptions(DokanNet.DokanInstanceBuilder.OptionsConfigurationDelegate)"/> and <see cref="M:DokanNet.DokanInstanceBuilder.ConfigureLogger(System.Func{DokanNet.Logging.ILogger})"/>.
            </summary>
        </member>
        <member name="T:DokanNet.DokanInstanceNotifyCompletion">
            <summary>
            Support for async/await operation on DokanInstance objects
            </summary>
        </member>
        <member name="M:DokanNet.DokanInstanceNotifyCompletion.GetResult">
            <summary>
            Gets a value indicating whether DokanInstance was closed or if await timed out
            </summary>
            <returns>True if DokanInstance was closed or false if await timed out</returns>
        </member>
        <member name="T:DokanNet.DokanOperationProxy">
            <summary>
            The dokan operation proxy.
            </summary>
        </member>
        <member name="F:DokanNet.DokanOperationProxy.FileOptionsMask">
            <summary>
            To be used to mask out the <see cref="T:System.IO.FileOptions"/> flags from what is returned 
            from <see cref="M:DokanNet.Native.NativeMethods.DokanMapKernelToUserCreateFileFlags(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32@,System.Int32@,System.Int32@)"/>.
            </summary>
        </member>
        <member name="F:DokanNet.DokanOperationProxy.FileAttributeMask">
            <summary>
            To be used to mask out the <see cref="T:System.IO.FileAttributes"/> flags from what is returned 
            from <see cref="M:DokanNet.Native.NativeMethods.DokanMapKernelToUserCreateFileFlags(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32@,System.Int32@,System.Int32@)"/>.
            Note that some flags where introduces in .NET Framework 4.5, and is not supported 
            in .NET Framework 4. 
            </summary>
        </member>
        <member name="F:DokanNet.DokanOperationProxy.FileAccessMask">
            <summary>
            To be used to mask out the <see cref="T:DokanNet.FileAccess"/> flags.
            </summary>
        </member>
        <member name="F:DokanNet.DokanOperationProxy.FileShareMask">
            <summary>
            To be used to mask out the <see cref="T:System.IO.FileShare"/> flags.
            </summary>
        </member>
        <member name="M:DokanNet.DokanOperationProxy.#ctor(DokanNet.Logging.ILogger,DokanNet.IDokanOperations)">
            <summary>
            Initializes a new instance of the <see cref="T:DokanNet.DokanOperationProxy"/> class.
            </summary>
            <param name="operations">
            A <see cref="T:DokanNet.IDokanOperations"/> that contains the custom implementation of the driver.
            </param>
            <param name="logger">
            A <see cref="T:DokanNet.Logging.ILogger"/> that handle all logging.
            </param>
        </member>
        <member name="M:DokanNet.DokanOperationProxy.ZwCreateFileProxy(System.String,System.IntPtr,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,DokanNet.DokanFileInfo)">
            <summary>
            CreateFile is called each time a request is made on a file system object.
            
            In case <see cref="F:System.IO.FileMode.OpenOrCreate"/> and
            <see cref="F:System.IO.FileMode.Create"/> are opening successfully a already
            existing file, you have to return <see cref="F:DokanNet.DokanResult.AlreadyExists"/> instead of <see cref="F:DokanNet.NtStatus.Success"/>.
            
            If the file is a directory, CreateFile is also called.
            In this case, CreateFile should return <see cref="F:DokanNet.NtStatus.Success"/> when that directory
            can be opened and <see cref="P:DokanNet.DokanFileInfo.IsDirectory"/> has to be set to <c>true</c>.
            
            <see cref="P:DokanNet.DokanFileInfo.Context"/> can be used to store data (like <see cref="T:System.IO.FileStream"/>)
            that can be retrieved in all other request related to the context.
            </summary>
            <param name="rawFileName">File path requested by the Kernel on the FileSystem.</param>
            <param name="securityContext">SecurityContext, see <a href="https://msdn.microsoft.com/en-us/library/windows/hardware/ff550613(v=vs.85).aspx">IO_SECURITY_CONTEXT structure (MSDN)</a>.</param>
            <param name="rawDesiredAccess">Specifies an <a href="https://msdn.microsoft.com/en-us/library/windows/hardware/ff540466(v=vs.85).aspx">ACCESS_MASK (MSDN)</a> value that determines the requested access to the object.</param>
            <param name="rawFileAttributes">Specifies one or more FILE_ATTRIBUTE_XXX flags, which represent the file attributes to set if you create or overwrite a file.</param>
            <param name="rawShareAccess">Type of share access, which is specified as zero or any combination of <see cref="T:System.IO.FileShare"/>.</param>
            <param name="rawCreateDisposition">Specifies the action to perform if the file does or does not exist.</param>
            <param name="rawCreateOptions">Specifies the options to apply when the driver creates or opens the file.</param>
            <param name="rawFileInfo">>An <see cref="T:DokanNet.DokanFileInfo"/> with information about the file or directory.</param>
            <returns>The <see cref="T:DokanNet.NtStatus"/>.</returns>
            \see <a href="https://msdn.microsoft.com/en-us/library/windows/hardware/ff566424(v=vs.85).aspx">ZwCreateFile routine (MSDN)</a>
            <see cref="M:DokanNet.IDokanOperations.CreateFile(System.String,DokanNet.FileAccess,System.IO.FileShare,System.IO.FileMode,System.IO.FileOptions,System.IO.FileAttributes,DokanNet.IDokanFileInfo)"/>
        </member>
        <member name="M:DokanNet.DokanOperationProxy.AddTo(DokanNet.DokanOperationProxy.FILL_FIND_FILE_DATA,DokanNet.DokanFileInfo,DokanNet.FileInformation)">
            <summary>
            Call the delegate <paramref name="fill"/> using data in <paramref name="rawFileInfo"/> and <paramref name="fi"/>.
            </summary>
            <param name="fill">The delegate of type <see cref="T:DokanNet.DokanOperationProxy.FILL_FIND_FILE_DATA"/> to be called.</param>
            <param name="rawFileInfo">A <see cref="T:DokanNet.DokanFileInfo"/> to be used when calling <paramref name="fill"/>.</param>
            <param name="fi">A <see cref="T:DokanNet.FileInformation"/> with information to be used when calling <paramref name="fill"/>.</param>
        </member>
        <member name="M:DokanNet.DokanOperationProxy.GetDataFromPointer``1(System.IntPtr)">
            <summary>Converts an unmanaged function pointer to a delegate of a specified type. </summary>
            <returns>A instance of the specified delegate type.</returns>
            <param name="rawDelegate">The unmanaged function pointer to convert. </param>
            <typeparam name="TDelegate">The type of the delegate to return. </typeparam>
            <exception cref="T:System.ArgumentException">The <typeparamref name="TDelegate" /> generic parameter is not a delegate, or it is an open generic type.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="rawDelegate" /> parameter is null.</exception>
        </member>
        <member name="M:DokanNet.DokanOperationProxy.AddTo(DokanNet.DokanOperationProxy.FILL_FIND_STREAM_DATA,System.IntPtr,DokanNet.FileInformation)">
            <summary>
            Call the delegate <paramref name="fill"/> using data in <paramref name="fi"/> and <paramref name="findStreamContext"/>.
            </summary>
            <param name="fill">The delegate of type <see cref="T:DokanNet.DokanOperationProxy.FILL_FIND_STREAM_DATA"/> to be called.</param>
            <param name="findStreamContext">A <see cref="T:System.IntPtr"/> to be used when calling <paramref name="fill"/>.</param>
            <param name="fi">A <see cref="T:DokanNet.FileInformation"/> with information to be used when calling <paramref name="fill"/>.</param>
            <returns>Whether the buffer is full or not.</returns>
        </member>
        <member name="M:DokanNet.DokanOperationProxy.ToFileTime(System.Nullable{System.DateTime})">
            <summary>
            Converts the value of <paramref name="dateTime"/> to a Windows file time.
            If <paramref name="dateTime"/> is <c>null</c> or before 12:00 midnight January 1, 1601 C.E. UTC, it returns <c>0</c>.
            </summary>
            <param name="dateTime">
            The date Time.
            </param>
            <returns>
            The value of <paramref name="dateTime"/> expressed as a Windows file time
            -or- it returns <c>0</c> if <paramref name="dateTime"/> is before 12:00 midnight January 1, 1601 C.E. UTC or <c>null</c>.
            </returns>
            \see <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa365739(v=vs.85).aspx">WIN32_FILE_ATTRIBUTE_DATA structure (MSDN)</a>
        </member>
        <member name="T:DokanNet.DokanOperationProxy.FILL_FIND_FILE_DATA">
            <summary>
            Used to add an entry in <see cref="M:DokanNet.DokanOperationProxy.FindFilesProxy(System.String,System.IntPtr,DokanNet.DokanFileInfo)"/> and <see cref="M:DokanNet.DokanOperationProxy.FindFilesWithPatternProxy(System.String,System.String,System.IntPtr,DokanNet.DokanFileInfo)"/>.
            </summary>
            <param name="rawFindData">A <see cref="T:DokanNet.Native.WIN32_FIND_DATA"/>.</param>
            <param name="rawFileInfo">A <see cref="T:DokanNet.DokanFileInfo"/>.</param>
            <returns><c>1</c> if buffer is full, otherwise <c>0</c> (currently it never returns <c>1</c>)</returns>
            <remarks>This is the same delegate as <c>PFillFindData</c> (dokan.h) in the C version of Dokan.</remarks>
        </member>
        <member name="T:DokanNet.DokanOperationProxy.FILL_FIND_STREAM_DATA">
            <summary>
            Used to add an entry in <see cref="M:DokanNet.DokanOperationProxy.FindStreamsProxy(System.String,System.IntPtr,System.IntPtr,DokanNet.DokanFileInfo)"/>.
            </summary>
            <param name="rawFindData">A <see cref="T:DokanNet.Native.WIN32_FIND_STREAM_DATA"/>.</param>
            <param name="findStreamContext">The context received by <see cref="F:DokanNet.Native.DOKAN_OPERATIONS.FindStreams"/>.</param>
            <returns><c>FALSE</c> if the buffer is full, otherwise <c>TRUE</c></returns>
            <remarks>This is the same delegate as <c>PFillFindStreamData</c> (dokan.h) in the C version of Dokan.</remarks>
        </member>
        <member name="T:DokanNet.DokanOptions">
            <summary>
            Dokan mount options used to describe dokan device behavior. 
            </summary>
            \if PRIVATE
            <seealso cref="F:DokanNet.Native.DOKAN_OPTIONS.Options"/>
            \endif
        </member>
        <member name="F:DokanNet.DokanOptions.FixedDrive">
            <summary>Fixed Drive.</summary>
        </member>
        <member name="F:DokanNet.DokanOptions.DebugMode">
            <summary>Enable output debug message.</summary>
        </member>
        <member name="F:DokanNet.DokanOptions.StderrOutput">
            <summary>Enable output debug message to stderr.</summary>
        </member>
        <member name="F:DokanNet.DokanOptions.AltStream">
            <summary>Use alternate stream.</summary>
        </member>
        <member name="F:DokanNet.DokanOptions.WriteProtection">
            <summary>Enable mount drive as write-protected.</summary>
        </member>
        <member name="F:DokanNet.DokanOptions.NetworkDrive">
            <summary>Use network drive - Dokan network provider need to be installed.</summary>
        </member>
        <member name="F:DokanNet.DokanOptions.RemovableDrive">
            <summary>Use removable drive.</summary>
        </member>
        <member name="F:DokanNet.DokanOptions.MountManager">
            <summary>Use mount manager.</summary>
        </member>
        <member name="F:DokanNet.DokanOptions.CurrentSession">
            <summary>Mount the drive on current session only.</summary>
        </member>
        <member name="F:DokanNet.DokanOptions.UserModeLock">
            <summary>Enable Lockfile/Unlockfile operations.</summary>
        </member>
        <member name="F:DokanNet.DokanOptions.EnableNotificationAPI">
            <summary>
            Enable methods in <see cref="T:DokanNet.Dokan.Notify"/>, which require this library to maintain a special
            handle while the file system is mounted.
            Without this flag, the methods in that inner class always return false if invoked.
            </summary>
        </member>
        <member name="F:DokanNet.DokanOptions.CaseSensitive">
            <summary>
            Enable Case sensitive path.
            By default all path are case insensitive.
            For case sensitive: \\dir\\File and \\diR\\file are different files
            but for case insensitive they are the same.
            </summary>
        </member>
        <member name="F:DokanNet.DokanOptions.EnableNetworkUnmount">
            <summary>
            Enables unmounting of network drives via file explorer
            </summary>
        </member>
        <member name="F:DokanNet.DokanOptions.DispatchDriverLogs">
            <summary>
            Forward the kernel driver global and volume logs to the userland
            </summary>
        </member>
        <member name="T:DokanNet.DokanResult">
            <summary>
            Defines common result status codes in <see cref="T:DokanNet.NtStatus"/> for %Dokan
            operations.
            </summary>
        </member>
        <member name="F:DokanNet.DokanResult.Success">
            <summary>
            Success - The operation completed successfully.
            </summary>
        </member>
        <member name="F:DokanNet.DokanResult.Error">
            <summary>
            Error - Incorrect function.
            </summary>
        </member>
        <member name="F:DokanNet.DokanResult.FileNotFound">
            <summary>
            Error - The system cannot find the file specified.
            </summary>
        </member>
        <member name="F:DokanNet.DokanResult.PathNotFound">
            <summary>
            Error - The system cannot find the path specified.
            </summary>
        </member>
        <member name="F:DokanNet.DokanResult.AccessDenied">
            <summary>
            Error - Access is denied.
            </summary>
        </member>
        <member name="F:DokanNet.DokanResult.InvalidHandle">
            <summary>
            Error - The handle is invalid.
            </summary>
        </member>
        <member name="F:DokanNet.DokanResult.NotReady">
            <summary>
            Warning - The device is not ready.
            </summary>
        </member>
        <member name="F:DokanNet.DokanResult.SharingViolation">
            <summary>
            Error - The process cannot access the file because it is being used
            by another process.
            </summary>
        </member>
        <member name="F:DokanNet.DokanResult.FileExists">
            <summary>
            Error - The file exists.
            </summary>
        </member>
        <member name="F:DokanNet.DokanResult.DiskFull">
            <summary>
            Error - There is not enough space on the disk.
            </summary>
        </member>
        <member name="F:DokanNet.DokanResult.NotImplemented">
            <summary>
            Error - This function is not supported on this system.
            </summary>
        </member>
        <member name="F:DokanNet.DokanResult.BufferTooSmall">
            <summary>
            Error - The data area passed to a system call is too small.
            </summary>
        </member>
        <member name="F:DokanNet.DokanResult.BufferOverflow">
            <summary>
            Warning - The data area passed to a system call is too small.
            </summary>
        </member>
        <member name="F:DokanNet.DokanResult.InvalidName">
            <summary>
            Error - The filename, directory name, or volume label syntax is
            incorrect.
            </summary>
        </member>
        <member name="F:DokanNet.DokanResult.DirectoryNotEmpty">
            <summary>
            Error - The directory is not empty.
            </summary>
        </member>
        <member name="F:DokanNet.DokanResult.AlreadyExists">
            <summary>
            Error - Cannot create a file when that file already exists.
            </summary>
        </member>
        <member name="F:DokanNet.DokanResult.InternalError">
            <summary>
            Error - An exception occurred in the service when handling the
            control request.
            </summary>
        </member>
        <member name="F:DokanNet.DokanResult.PrivilegeNotHeld">
            <summary>
            Error - A required privilege is not held by the client.
            </summary>
        </member>
        <member name="F:DokanNet.DokanResult.Unsuccessful">
            <summary>
            Error - The requested operation was unsuccessful.
            </summary>
        </member>
        <member name="F:DokanNet.DokanResult.NotADirectory">
            <summary>
            Error - A directory semantics call was made but the accessed file was not a directory.
            </summary>
        </member>
        <member name="F:DokanNet.DokanResult.InvalidParameter">
            <summary>
            Error - The parameter is incorrect.
            </summary>
        </member>
        <member name="T:DokanNet.DokanStatus">
            <summary>
            Error codes returned by DokanMain.
            </summary>
        </member>
        <member name="F:DokanNet.DokanStatus.Success">
            <summary>
            Dokan mount succeed.
            </summary>
        </member>
        <member name="F:DokanNet.DokanStatus.Error">
            <summary>
            Dokan mount error.
            </summary>
        </member>
        <member name="F:DokanNet.DokanStatus.DriveLetterError">
            <summary>
            Dokan mount failed - Bad drive letter.
            </summary>
        </member>
        <member name="F:DokanNet.DokanStatus.DriverInstallError">
            <summary>
            Dokan mount failed - Can't install driver.
            </summary>
        </member>
        <member name="F:DokanNet.DokanStatus.StartError">
            <summary>
            Dokan mount failed - Driver answer that something is wrong.
            </summary>
        </member>
        <member name="F:DokanNet.DokanStatus.MountError">
            <summary>
            Dokan mount failed.
            Can't assign a drive letter or mount point.
            Probably already used by another volume.
            </summary>
        </member>
        <member name="F:DokanNet.DokanStatus.MountPointError">
            <summary>
            Dokan mount failed.
            Mount point is invalid.
            </summary>
        </member>
        <member name="F:DokanNet.DokanStatus.VersionError">
            <summary>
            Dokan mount failed.
            Requested an incompatible version.
            </summary>
        </member>
        <member name="T:DokanNet.Extensions">
            <summary>
            <see cref="T:DokanNet.DokanInstance"/> extensions allowing to check whether it is running or to wait until it is unmount.
            </summary>
        </member>
        <member name="M:DokanNet.Extensions.IsFileSystemRunning(DokanNet.DokanInstance)">
            <summary>
            Check if the FileSystem is still running or not.
            </summary>
            <param name="dokanInstance">The dokan mount context created by <see cref="M:DokanNet.DokanInstance.#ctor(DokanNet.Logging.ILogger,DokanNet.Native.DOKAN_OPTIONS,DokanNet.Dokan,DokanNet.IDokanOperations)"/>.</param>
            <returns>Whether the FileSystem is still running or not.</returns>
        </member>
        <member name="M:DokanNet.Extensions.WaitForFileSystemClosed(DokanNet.DokanInstance,System.UInt32)">
            <summary>
            Wait until the FileSystem is unmount.
            </summary>
            <param name="dokanInstance">The dokan mount context created by <see cref="M:DokanNet.DokanInstance.#ctor(DokanNet.Logging.ILogger,DokanNet.Native.DOKAN_OPTIONS,DokanNet.Dokan,DokanNet.IDokanOperations)"/>.</param>
            <param name="milliSeconds">The time-out interval, in milliseconds. If a nonzero value is specified, the function waits until the object is signaled or the interval elapses. If set to zero,
            the function does not enter a wait state if the object is not signaled; it always returns immediately. If set to INFINITE, the function will return only when the object is signaled.</param>
            <returns>See <a href="https://docs.microsoft.com/en-us/windows/win32/api/synchapi/nf-synchapi-waitforsingleobject">WaitForSingleObject</a> for a description of return values.</returns>
        </member>
        <member name="M:DokanNet.Extensions.WaitForFileSystemClosedAsync(DokanNet.DokanInstance,System.UInt32)">
            <summary>
            Wait asynchronously until the FileSystem is unmounted.
            </summary>
            <param name="dokanInstance">The dokan mount context created by <see cref="T:DokanNet.DokanInstance"/>.</param>
            <param name="milliSeconds">The time-out interval, in milliseconds. If a nonzero value is specified, the function waits until the object is signaled or the interval elapses. If <paramref name="milliSeconds" /> is zero,
            the function does not enter a wait state if the object is not signaled; it always returns immediately. If <paramref name="dokanInstance"/> is INFINITE, the function will return only when the object is signaled.</param>
            <returns>True if instance was dismounted or false if time out occurred.</returns>
        </member>
        <member name="T:DokanNet.FileAccess">
            <summary>
            Defines standard, specific, and generic rights. 
            These rights are used in access control entries (ACEs) and are the primary means of 
            specifying the requested or granted access to an object. 
            </summary>
            <remarks>
            This extends the <c><see cref="T:System.IO.FileAccess"/></c> enumerator in .NET that only 
            contains flags for <c>Read</c> (<c>0x01</c>) and <c>Write</c> (<c>0x10</c>).
            </remarks>
            \see <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa374896(v=vs.85).aspx">Access Mask Format (MSDN)</a>
            \see <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa374892(v=vs.85).aspx">ACCESS_MASK (MSDN)</a>
            \see <a href="https://msdn.microsoft.com/en-us/library/4z36sx0f.aspx">FileAccess Enumeration (MSDN)</a>
        </member>
        <member name="F:DokanNet.FileAccess.None">
            <summary>
            No access defined.
            </summary>
        </member>
        <member name="F:DokanNet.FileAccess.ReadData">
            <summary>
            Read access right to an object.
            </summary>
            \native
            \table
            \nativeconst{FILE_READ_DATA,0x00000001,File &amp; pipe}
            \nativeconst{FILE_LIST_DIRECTORY,0x00000001,Directory}
            \endtable
            \endnative
        </member>
        <member name="F:DokanNet.FileAccess.WriteData">
            <summary>
            Write access right to an object.
            </summary>
            \native
            \table
            \nativeconst{FILE_WRITE_DATA,0x00000002,File &amp; pipe}
            \nativeconst{FILE_ADD_FILE,0x00000002,Directory}
            \endtable
            \endnative
        </member>
        <member name="F:DokanNet.FileAccess.AppendData">
            <summary>
            For a file object, the right to append data to the file.
            </summary>
            \native
            \table
            \nativeconst{FILE_APPEND_DATA,0x00000004,File}
            \nativeconst{FILE_ADD_SUBDIRECTORY,0x00000004,Directory}
            \nativeconst{FILE_CREATE_PIPE_INSTANCE,0x00000004,Named pipe}
            \endtable
            \endnative
        </member>
        <member name="F:DokanNet.FileAccess.ReadExtendedAttributes">
            <summary>
            The right to read extended file attributes.
            </summary>
            \native
            \table
            \nativeconst{FILE_READ_EA,0x00000008,File &amp; directory}
            \endtable
            \endnative
        </member>
        <member name="F:DokanNet.FileAccess.WriteExtendedAttributes">
            <summary>
            The right to write extended file attributes.
            </summary>
            \native
            \table
            \nativeconst{FILE_WRITE_EA,0x00000010,File &amp; directory}
            \endtable
            \endnative
        </member>
        <member name="F:DokanNet.FileAccess.Execute">
            <summary>
            For a native code file, the right to execute the file.
            This access right given to scripts may cause the script to be executable, depending on the script interpreter.
            </summary>
            \native
            \table
            \nativeconst{FILE_EXECUTE,0x00000020,File}
            \nativeconst{FILE_TRAVERSE,0x00000020,Directory}
            \endtable
            \endnative
        </member>
        <member name="F:DokanNet.FileAccess.DeleteChild">
            <summary>
            For a directory, the right to delete a directory and all the files it contains, including read-only files.
            </summary>
            \native
            \table
            \nativeconst{FILE_DELETE_CHILD,0x00000040,Directory}
            \endtable
            \endnative
        </member>
        <member name="F:DokanNet.FileAccess.ReadAttributes">
            <summary>
            The right to read file attributes.
            </summary>
            \native
            \table
            \nativeconst{FILE_READ_ATTRIBUTES,0x00000080,All}
            \endtable
            \endnative
        </member>
        <member name="F:DokanNet.FileAccess.WriteAttributes">
            <summary>
            The right to write file attributes.
            </summary>
            \native
            \table
            \nativeconst{FILE_WRITE_ATTRIBUTES,0x00000100,All}
            \endtable
            \endnative
        </member>
        <member name="F:DokanNet.FileAccess.Delete">
            <summary>
            The right to delete the object.
            </summary>
            \native
            \table
            \nativeconst{DELETE,0x00010000}
            \endtable
            \endnative
        </member>
        <member name="F:DokanNet.FileAccess.ReadPermissions">
            <summary>
            The right to read the information in the object's security descriptor, 
            not including the information in the system access control list (SACL).
            </summary>
            \native
            \table
            \nativeconst{READ_CONTROL,0x00020000}
            \endtable
            \endnative
        </member>
        <member name="F:DokanNet.FileAccess.ChangePermissions">
            <summary>
            The right to modify the discretionary access control list (DACL) in 
            the object's security descriptor.
            </summary>
            \native
            \table
            \nativeconst{WRITE_DAC,0x00040000}
            \endtable
            \endnative
        </member>
        <member name="F:DokanNet.FileAccess.SetOwnership">
            <summary>
            The right to change the owner in the object's security descriptor.
            </summary>
            \native
            \table
            \nativeconst{WRITE_OWNER,0x00080000}
            \endtable
            \endnative
        </member>
        <member name="F:DokanNet.FileAccess.Synchronize">
            <summary>
            The right to use the object for synchronization. 
            This enables a thread to wait until the object is in the signaled state. 
            Some object types do not support this access right.
            </summary>
            \native
            \table
            \nativeconst{SYNCHRONIZE,0x00100000}
            \endtable
            \endnative
        </member>
        <member name="F:DokanNet.FileAccess.Reserved">
            <summary>
            Obsolete, use <see cref="F:DokanNet.FileAccess.AccessSystemSecurity"/> instead. 
            </summary>
        </member>
        <member name="F:DokanNet.FileAccess.AccessSystemSecurity">
            <summary>
            Access system security. 
            It is used to indicate access to a system access control list (SACL). 
            This type of access requires the calling process to have the <c>SE_SECURITY_NAME</c> 
            (Manage auditing and security log) privilege. If this flag is set in 
            the access mask of an audit access ACE (successful or unsuccessful access), 
            the SACL access will be audited.
            </summary>
            \native
            \table
            \nativeconst{ACCESS_SYSTEM_SECURITY,0x01000000}
            \endtable
            \endnative
        </member>
        <member name="F:DokanNet.FileAccess.MaximumAllowed">
            <summary>
            All the access rights that are valid for the caller.
            </summary>
            \native
            \table
            \nativeconst{MAXIMUM_ALLOWED,0x02000000}
            \endtable
            \endnative
        </member>
        <member name="F:DokanNet.FileAccess.GenericAll">
            <summary>
            All possible access rights.
            </summary>
            \native
            \table
            \nativeconst{GENERIC_ALL,0x10000000}
            \endtable
            \endnative
        </member>
        <member name="F:DokanNet.FileAccess.GenericExecute">
            <summary>
            Generic execute access. 
            </summary>
            \native
            \table
            \nativeconst{GENERIC_EXECUTE,0x20000000}
            \endtable
            \endnative
        </member>
        <member name="F:DokanNet.FileAccess.GenericWrite">
            <summary>
            Generic write access.
            </summary>
            \native
            \table
            \nativeconst{GENERIC_WRITE,0x40000000}
            \endtable
            \endnative
        </member>
        <member name="F:DokanNet.FileAccess.GenericRead">
            <summary>
            Generic read access.
            </summary>
            \native
            \table
            \nativeconst{GENERIC_READ,0x80000000}
            \endtable
            \endnative
        </member>
        <member name="T:DokanNet.FileInformation">
            <summary>
            Used to provide file information to %Dokan during operations by
             - <see cref="M:DokanNet.IDokanOperations.GetFileInformation(System.String,DokanNet.FileInformation@,DokanNet.IDokanFileInfo)"/>
             - <see cref="M:DokanNet.IDokanOperations.FindFiles(System.String,System.Collections.Generic.IList{DokanNet.FileInformation}@,DokanNet.IDokanFileInfo)"/>
             - <see cref="M:DokanNet.IDokanOperations.FindStreams(System.String,System.Collections.Generic.IList{DokanNet.FileInformation}@,DokanNet.IDokanFileInfo)"/> 
             - <see cref="M:DokanNet.IDokanOperations.FindFilesWithPattern(System.String,System.String,System.Collections.Generic.IList{DokanNet.FileInformation}@,DokanNet.IDokanFileInfo)"/>.
            </summary>
        </member>
        <member name="P:DokanNet.FileInformation.FileName">
            <summary>
            Gets or sets the name of the file or directory.
            <see cref="M:DokanNet.IDokanOperations.GetFileInformation(System.String,DokanNet.FileInformation@,DokanNet.IDokanFileInfo)"/> required the file path
            when other operations only need the file name.
            </summary>
        </member>
        <member name="P:DokanNet.FileInformation.Attributes">
            <summary>
            Gets or sets the <c><see cref="T:System.IO.FileAttributes"/></c> for the file or directory.
            </summary>
        </member>
        <member name="P:DokanNet.FileInformation.CreationTime">
            <summary>
            Gets or sets the creation time of the file or directory.
            If equal to <c>null</c>, the value will not be set or the file has no creation time.
            </summary>
        </member>
        <member name="P:DokanNet.FileInformation.LastAccessTime">
            <summary>
            Gets or sets the last access time of the file or directory.
            If equal to <c>null</c>, the value will not be set or the file has no last access time.
            </summary>
        </member>
        <member name="P:DokanNet.FileInformation.LastWriteTime">
            <summary>
            Gets or sets the last write time of the file or directory.
            If equal to <c>null</c>, the value will not be set or the file has no last write time.
            </summary>
        </member>
        <member name="P:DokanNet.FileInformation.Length">
            <summary>
            Gets or sets the length of the file.
            </summary>
        </member>
        <member name="T:DokanNet.FileSystemFeatures">
            <summary>
            Defines feature flags for the file system.
            </summary>
            \see <a href="https://msdn.microsoft.com/en-us/library/cc246323.aspx">File System Attribute Extensions (MSDN)</a>
        </member>
        <member name="F:DokanNet.FileSystemFeatures.None">
            <summary>
            No features defined.
            </summary>
        </member>
        <member name="F:DokanNet.FileSystemFeatures.CaseSensitiveSearch">
            <summary>
            The file system supports case-sensitive file names.
            </summary>
        </member>
        <member name="F:DokanNet.FileSystemFeatures.CasePreservedNames">
            <summary>
            The file system preserves the case of file names when it stores the name on disk.
            </summary>
        </member>
        <member name="F:DokanNet.FileSystemFeatures.UnicodeOnDisk">
            <summary>
            The file system supports Unicode in file names.
            </summary>
        </member>
        <member name="F:DokanNet.FileSystemFeatures.PersistentAcls">
            <summary>
            The file system preserves and enforces access control lists.
            </summary>
        </member>
        <member name="F:DokanNet.FileSystemFeatures.VolumeQuotas">
            <summary>
            The file system supports per-user quotas.
            </summary>
        </member>
        <member name="F:DokanNet.FileSystemFeatures.SupportsSparseFiles">
            <summary>
            The file system supports sparse files.
            
            This feature allows programs to create very large files, but to consume disk space only as needed.
            A sparse file is a file that contains much of zeros, and a file system that support
            this are removing repeating zeros to save space.
            </summary>
            \see <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa365564(v=vs.85).aspx">Sparse Files (MSDN)</a>
        </member>
        <member name="F:DokanNet.FileSystemFeatures.SupportsReparsePoints">
            <summary>
            The file system supports reparse points.
            
            Programs can trap open operations against objects in the file system and run their
            own code before returning file data. This feature can be used to extend file 
            system features such as mount points, which you can use to redirect data read
            and written from a folder to another volume or physical disk.
            </summary>
        </member>
        <member name="F:DokanNet.FileSystemFeatures.SupportsRemoteStorage">
            <summary>
            The file system supports remote storage.
            </summary>
        </member>
        <member name="F:DokanNet.FileSystemFeatures.VolumeIsCompressed">
            <summary>
            Volume is a compressed volume. This flag is incompatible with FILE_FILE_COMPRESSION.
            This does not affect how data is transferred over the network.
            </summary>
        </member>
        <member name="F:DokanNet.FileSystemFeatures.SupportsObjectIDs">
            <summary>
            File system supports object identifiers.
            </summary>
        </member>
        <member name="F:DokanNet.FileSystemFeatures.SupportsEncryption">
            <summary>
            File system supports encryption.
            </summary>
        </member>
        <member name="F:DokanNet.FileSystemFeatures.NamedStreams">
            <summary>
            File system supports multiple named data streams for a file.
            
            The unnamed data stream is the stream where the content in the file is stored.
            A named stream is a stream where extra data can be stored. The data is connected to the file
            and if the file is moved, the data is copied to the new place if that file system support it.
            \see <a href="https://blogs.technet.microsoft.com/askcore/2013/03/24/alternate-data-streams-in-ntfs/">Alternate Data Streams in NTFS (TechNet)</a>
            </summary>
        </member>
        <member name="F:DokanNet.FileSystemFeatures.ReadOnlyVolume">
            <summary>
            Specified volume is read-only.
            </summary>
        </member>
        <member name="F:DokanNet.FileSystemFeatures.SequentialWriteOnce">
            <summary>
            Specified volume can be written to one time only. The write MUST be performed in sequential order.
            </summary>
        </member>
        <member name="F:DokanNet.FileSystemFeatures.SupportsTransactions">
            <summary>
            The file system supports transaction processing to group changes to files into a transaction.
            The transaction will guarantee that all changes happens, or none of them.
            \see <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa365993(v=vs.85).aspx">About KTM (MSDN)</a>
            </summary>
        </member>
        <member name="T:DokanNet.IDokanFileInfo">
            <summary>
            %Dokan file information interface.
            </summary>
            <remarks>
            This interface can be inherited in order to testunit user <see cref="T:DokanNet.IDokanOperations"/> implementation.
            </remarks>
        </member>
        <member name="P:DokanNet.IDokanFileInfo.Context">
            <summary>
            Gets or sets context that can be used to carry information between operation.
            The Context can carry whatever type like <c><see cref="T:System.IO.FileStream"/></c>, <c>struct</c>, <c>int</c>,
            or internal reference that will help the implementation understand the request context of the event.
            </summary>
        </member>
        <member name="P:DokanNet.IDokanFileInfo.DeleteOnClose">
            <summary>
            Gets or sets a value indicating whether the file has to be delete
            during the <see cref="M:DokanNet.IDokanOperations.Cleanup(System.String,DokanNet.IDokanFileInfo)"/> event.
            </summary>
        </member>
        <member name="P:DokanNet.IDokanFileInfo.IsDirectory">
            <summary>
            Gets or sets a value indicating whether it requesting a directory
            file. Must be set in <see cref="M:DokanNet.IDokanOperations.CreateFile(System.String,DokanNet.FileAccess,System.IO.FileShare,System.IO.FileMode,System.IO.FileOptions,System.IO.FileAttributes,DokanNet.IDokanFileInfo)"/> if
            the file appear to be a folder.
            </summary>
        </member>
        <member name="P:DokanNet.IDokanFileInfo.NoCache">
            <summary>
            Read or write directly from data source without cache.
            </summary>
        </member>
        <member name="P:DokanNet.IDokanFileInfo.PagingIo">
            <summary>
            Read or write is paging IO.
            </summary>
        </member>
        <member name="P:DokanNet.IDokanFileInfo.ProcessId">
            <summary>
            Process id for the thread that originally requested a given I/O
            operation.
            </summary>
        </member>
        <member name="P:DokanNet.IDokanFileInfo.SynchronousIo">
            <summary>
            Read or write is synchronous IO.
            </summary>
        </member>
        <member name="P:DokanNet.IDokanFileInfo.WriteToEndOfFile">
            <summary>
            If <c>true</c>, write to the current end of file instead 
            of using the <c>Offset</c> parameter.
            </summary>
        </member>
        <member name="M:DokanNet.IDokanFileInfo.GetRequestor">
            <summary>
            This method needs to be called in <see cref="M:DokanNet.IDokanOperations.CreateFile(System.String,DokanNet.FileAccess,System.IO.FileShare,System.IO.FileMode,System.IO.FileOptions,System.IO.FileAttributes,DokanNet.IDokanFileInfo)"/>.
            </summary>
            <returns>An <c><see cref="T:System.Security.Principal.WindowsIdentity"/></c> with the access token, 
            -or- <c>null</c> if the operation was not successful.</returns>
        </member>
        <member name="M:DokanNet.IDokanFileInfo.TryResetTimeout(System.Int32)">
            <summary>
            Extends the time out of the current IO operation in driver.
            </summary>
            <param name="milliseconds">Number of milliseconds to extend with.</param>
            <returns>If the operation was successful.</returns>
        </member>
        <member name="T:DokanNet.IDokanOperations">
            <summary>
            %Dokan API callbacks interface.
            
            A interface of callbacks that describe all %Dokan API operation
            that will be called when Windows access to the file system.
            
            All this callbacks can return <see cref="F:DokanNet.NtStatus.NotImplemented"/>
            if you dont want to support one of them. Be aware that returning such value to important callbacks
            such <see cref="M:DokanNet.IDokanOperations.CreateFile(System.String,DokanNet.FileAccess,System.IO.FileShare,System.IO.FileMode,System.IO.FileOptions,System.IO.FileAttributes,DokanNet.IDokanFileInfo)"/>/<see cref="M:DokanNet.IDokanOperations.ReadFile(System.String,System.Byte[],System.Int32@,System.Int64,DokanNet.IDokanFileInfo)"/>/... would make the filesystem not working or unstable.
            </summary>
            <remarks>This is the same struct as <c>DOKAN_OPERATIONS</c> (dokan.h) in the C version of Dokan.</remarks>
        </member>
        <member name="M:DokanNet.IDokanOperations.CreateFile(System.String,DokanNet.FileAccess,System.IO.FileShare,System.IO.FileMode,System.IO.FileOptions,System.IO.FileAttributes,DokanNet.IDokanFileInfo)">
            <summary>
            CreateFile is called each time a request is made on a file system object.
            
            In case <paramref name="mode"/> is <c><see cref="F:System.IO.FileMode.OpenOrCreate"/></c> and
            <c><see cref="F:System.IO.FileMode.Create"/></c> and CreateFile are successfully opening a already
            existing file, you have to return <see cref="F:DokanNet.DokanResult.AlreadyExists"/> instead of <see cref="F:DokanNet.NtStatus.Success"/>.
            
            If the file is a directory, CreateFile is also called.
            In this case, CreateFile should return <see cref="F:DokanNet.NtStatus.Success"/> when that directory
            can be opened and <see cref="P:DokanNet.IDokanFileInfo.IsDirectory"/> must be set to <c>true</c>.
            On the other hand, if <see cref="P:DokanNet.IDokanFileInfo.IsDirectory"/> is set to <c>true</c>
            but the path target a file, you need to return <see cref="F:DokanNet.DokanResult.NotADirectory"/>
            
            <see cref="P:DokanNet.IDokanFileInfo.Context"/> can be used to store data (like <c><see cref="T:System.IO.FileStream"/></c>)
            that can be retrieved in all other request related to the context.
            </summary>
            <param name="fileName">File path requested by the Kernel on the FileSystem.</param>
            <param name="access">A <see cref="T:DokanNet.FileAccess"/> with permissions for file or directory.</param>
            <param name="share">Type of share access to other threads, which is specified as
            <see cref="F:System.IO.FileShare.None"/> or any combination of <see cref="T:System.IO.FileShare"/>.
            Device and intermediate drivers usually set ShareAccess to zero,
            which gives the caller exclusive access to the open file.</param>
            <param name="mode">Specifies how the operating system should open a file. See <a href="https://msdn.microsoft.com/en-us/library/system.io.filemode(v=vs.110).aspx">FileMode Enumeration (MSDN)</a>.</param>
            <param name="options">Represents advanced options for creating a FileStream object. See <a href="https://msdn.microsoft.com/en-us/library/system.io.fileoptions(v=vs.110).aspx">FileOptions Enumeration (MSDN)</a>.</param>
            <param name="attributes">Provides attributes for files and directories. See <a href="https://msdn.microsoft.com/en-us/library/system.io.fileattributes(v=vs.110).aspx">FileAttributes Enumeration (MSDN></a>.</param>
            <param name="info">An <see cref="T:DokanNet.IDokanFileInfo"/> with information about the file or directory.</param>
            <returns><see cref="T:DokanNet.NtStatus"/> or <see cref="T:DokanNet.DokanResult"/> appropriate to the request result.</returns>
            \see See <a href="https://msdn.microsoft.com/en-us/library/windows/hardware/ff566424(v=vs.85).aspx">ZwCreateFile (MSDN)</a> for more information about the parameters of this callback.
        </member>
        <member name="M:DokanNet.IDokanOperations.Cleanup(System.String,DokanNet.IDokanFileInfo)">
            <summary>
            Receipt of this request indicates that the last handle for a file object that is associated 
            with the target device object has been closed (but, due to outstanding I/O requests, 
            might not have been released). 
            
            Cleanup is requested before <see cref="M:DokanNet.IDokanOperations.CloseFile(System.String,DokanNet.IDokanFileInfo)"/> is called.
            </summary>
            <remarks>
            When <see cref="P:DokanNet.IDokanFileInfo.DeleteOnClose"/> is <c>true</c>, you must delete the file in Cleanup.
            Refer to <see cref="M:DokanNet.IDokanOperations.DeleteFile(System.String,DokanNet.IDokanFileInfo)"/> and <see cref="M:DokanNet.IDokanOperations.DeleteDirectory(System.String,DokanNet.IDokanFileInfo)"/> for explanation.
            </remarks>
            <param name="fileName">File path requested by the Kernel on the FileSystem.</param>
            <param name="info">An <see cref="T:DokanNet.IDokanFileInfo"/> with information about the file or directory.</param>
            <seealso cref="M:DokanNet.IDokanOperations.DeleteFile(System.String,DokanNet.IDokanFileInfo)"/>
            <seealso cref="M:DokanNet.IDokanOperations.DeleteDirectory(System.String,DokanNet.IDokanFileInfo)"/>
            <seealso cref="M:DokanNet.IDokanOperations.CloseFile(System.String,DokanNet.IDokanFileInfo)"/>
        </member>
        <member name="M:DokanNet.IDokanOperations.CloseFile(System.String,DokanNet.IDokanFileInfo)">
            <summary>
            CloseFile is called at the end of the life of the context.
            
            Receipt of this request indicates that the last handle of the file object that is associated 
            with the target device object has been closed and released. All outstanding I/O requests 
            have been completed or canceled.
            
            CloseFile is requested after <see cref="M:DokanNet.IDokanOperations.Cleanup(System.String,DokanNet.IDokanFileInfo)"/> is called.
            
            Remainings in <see cref="P:DokanNet.IDokanFileInfo.Context"/> has to be cleared before return.
            </summary>
            <param name="fileName">File path requested by the Kernel on the FileSystem.</param>
            <param name="info">An <see cref="T:DokanNet.IDokanFileInfo"/> with information about the file or directory.</param>
            <seealso cref="M:DokanNet.IDokanOperations.Cleanup(System.String,DokanNet.IDokanFileInfo)"/>
        </member>
        <member name="M:DokanNet.IDokanOperations.ReadFile(System.String,System.Byte[],System.Int32@,System.Int64,DokanNet.IDokanFileInfo)">
            <summary>
            ReadFile callback on the file previously opened in <see cref="M:DokanNet.IDokanOperations.CreateFile(System.String,DokanNet.FileAccess,System.IO.FileShare,System.IO.FileMode,System.IO.FileOptions,System.IO.FileAttributes,DokanNet.IDokanFileInfo)"/>.
            It can be called by different thread at the same time,
            therefor the read has to be thread safe.
            </summary>
            <param name="fileName">File path requested by the Kernel on the FileSystem.</param>
            <param name="buffer">Read buffer that has to be fill with the read result.
            The buffer size depend of the read size requested by the kernel.</param>
            <param name="bytesRead">Total number of bytes that has been read.</param>
            <param name="offset">Offset from where the read has to be proceed.</param>
            <param name="info">An <see cref="T:DokanNet.IDokanFileInfo"/> with information about the file or directory.</param>
            <returns><see cref="T:DokanNet.NtStatus"/> or <see cref="T:DokanNet.DokanResult"/> appropriate to the request result.</returns>
            <seealso cref="M:DokanNet.IDokanOperations.WriteFile(System.String,System.Byte[],System.Int32@,System.Int64,DokanNet.IDokanFileInfo)"/>
        </member>
        <member name="M:DokanNet.IDokanOperations.WriteFile(System.String,System.Byte[],System.Int32@,System.Int64,DokanNet.IDokanFileInfo)">
            <summary>
            WriteFile callback on the file previously opened in <see cref="M:DokanNet.IDokanOperations.CreateFile(System.String,DokanNet.FileAccess,System.IO.FileShare,System.IO.FileMode,System.IO.FileOptions,System.IO.FileAttributes,DokanNet.IDokanFileInfo)"/>
            It can be called by different thread at the same time,
            therefor the write/context has to be thread safe.
            </summary>
            <param name="fileName">File path requested by the Kernel on the FileSystem.</param>
            <param name="buffer">Data that has to be written.</param>
            <param name="bytesWritten">Total number of bytes that has been write.</param>
            <param name="offset">Offset from where the write has to be proceed.</param>
            <param name="info">An <see cref="T:DokanNet.IDokanFileInfo"/> with information about the file or directory.</param>
            <returns><see cref="T:DokanNet.NtStatus"/> or <see cref="T:DokanNet.DokanResult"/> appropriate to the request result.</returns>
            <seealso cref="M:DokanNet.IDokanOperations.ReadFile(System.String,System.Byte[],System.Int32@,System.Int64,DokanNet.IDokanFileInfo)"/>
        </member>
        <member name="M:DokanNet.IDokanOperations.FlushFileBuffers(System.String,DokanNet.IDokanFileInfo)">
            <summary>
            Clears buffers for this context and causes any buffered data to be written to the file.
            </summary>
            <param name="fileName">File path requested by the Kernel on the FileSystem.</param>
            <param name="info">An <see cref="T:DokanNet.IDokanFileInfo"/> with information about the file or directory.</param>
            <returns><see cref="T:DokanNet.NtStatus"/> or <see cref="T:DokanNet.DokanResult"/> appropriate to the request result.</returns>
        </member>
        <member name="M:DokanNet.IDokanOperations.GetFileInformation(System.String,DokanNet.FileInformation@,DokanNet.IDokanFileInfo)">
            <summary>
            Get specific informations on a file.
            </summary>
            <param name="fileName">File path requested by the Kernel on the FileSystem.</param>
            <param name="fileInfo"><see cref="T:DokanNet.FileInformation"/> struct to fill</param>
            <param name="info">An <see cref="T:DokanNet.IDokanFileInfo"/> with information about the file or directory.</param>
            <returns><see cref="T:DokanNet.NtStatus"/> or <see cref="T:DokanNet.DokanResult"/> appropriate to the request result.</returns>
        </member>
        <member name="M:DokanNet.IDokanOperations.FindFiles(System.String,System.Collections.Generic.IList{DokanNet.FileInformation}@,DokanNet.IDokanFileInfo)">
            <summary>
            List all files in the path requested
            
            <see cref="M:DokanNet.IDokanOperations.FindFilesWithPattern(System.String,System.String,System.Collections.Generic.IList{DokanNet.FileInformation}@,DokanNet.IDokanFileInfo)"/> is checking first. If it is not implemented or
            returns <see cref="F:DokanNet.NtStatus.NotImplemented"/>, then FindFiles is called.
            </summary>
            <param name="fileName">File path requested by the Kernel on the FileSystem.</param>
            <param name="files">A list of <see cref="T:DokanNet.FileInformation"/> to return.</param>
            <param name="info">An <see cref="T:DokanNet.IDokanFileInfo"/> with information about the file or directory.</param>
            <returns><see cref="T:DokanNet.NtStatus"/> or <see cref="T:DokanNet.DokanResult"/> appropriate to the request result.</returns>
            <seealso cref="M:DokanNet.IDokanOperations.FindFilesWithPattern(System.String,System.String,System.Collections.Generic.IList{DokanNet.FileInformation}@,DokanNet.IDokanFileInfo)"/>
        </member>
        <member name="M:DokanNet.IDokanOperations.FindFilesWithPattern(System.String,System.String,System.Collections.Generic.IList{DokanNet.FileInformation}@,DokanNet.IDokanFileInfo)">
            <summary>
            Same as <see cref="M:DokanNet.IDokanOperations.FindFiles(System.String,System.Collections.Generic.IList{DokanNet.FileInformation}@,DokanNet.IDokanFileInfo)"/> but with a search pattern to filter the result.
            </summary>
            <param name="fileName">Path requested by the Kernel on the FileSystem.</param>
            <param name="searchPattern">Search pattern</param>
            <param name="files">A list of <see cref="T:DokanNet.FileInformation"/> to return.</param>
            <param name="info">An <see cref="T:DokanNet.IDokanFileInfo"/> with information about the file or directory.</param>
            <returns><see cref="T:DokanNet.NtStatus"/> or <see cref="T:DokanNet.DokanResult"/> appropriate to the request result.</returns>
            <seealso cref="M:DokanNet.IDokanOperations.FindFiles(System.String,System.Collections.Generic.IList{DokanNet.FileInformation}@,DokanNet.IDokanFileInfo)"/>
        </member>
        <member name="M:DokanNet.IDokanOperations.SetFileAttributes(System.String,System.IO.FileAttributes,DokanNet.IDokanFileInfo)">
            <summary>
            Set file attributes on a specific file.
            </summary>
            <remarks>SetFileAttributes and <see cref="M:DokanNet.IDokanOperations.SetFileTime(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},DokanNet.IDokanFileInfo)"/> are called only if both of them are implemented.</remarks>
            <param name="fileName">File path requested by the Kernel on the FileSystem.</param>
            <param name="attributes"><see cref="T:System.IO.FileAttributes"/> to set on file</param>
            <param name="info">An <see cref="T:DokanNet.IDokanFileInfo"/> with information about the file or directory.</param>
            <returns><see cref="T:DokanNet.NtStatus"/> or <see cref="T:DokanNet.DokanResult"/> appropriate to the request result.</returns>
        </member>
        <member name="M:DokanNet.IDokanOperations.SetFileTime(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},DokanNet.IDokanFileInfo)">
            <summary>
            Set file times on a specific file.
            If <see cref="T:System.DateTime"/> is <c>null</c>, this should not be updated.
            </summary>
            <remarks><see cref="M:DokanNet.IDokanOperations.SetFileAttributes(System.String,System.IO.FileAttributes,DokanNet.IDokanFileInfo)"/> and SetFileTime are called only if both of them are implemented.</remarks>
            <param name="fileName">File or directory name.</param>
            <param name="creationTime"><see cref="T:System.DateTime"/> when the file was created.</param>
            <param name="lastAccessTime"><see cref="T:System.DateTime"/> when the file was last accessed.</param>
            <param name="lastWriteTime"><see cref="T:System.DateTime"/> when the file was last written to.</param>
            <param name="info">An <see cref="T:DokanNet.IDokanFileInfo"/> with information about the file or directory.</param>
            <returns><see cref="T:DokanNet.NtStatus"/> or <see cref="T:DokanNet.DokanResult"/> appropriate to the request result.</returns>
        </member>
        <member name="M:DokanNet.IDokanOperations.DeleteFile(System.String,DokanNet.IDokanFileInfo)">
             <summary>
             Check if it is possible to delete a file.
             </summary>
             <remarks>
             You should NOT delete the file in DeleteFile, but instead
             you must only check whether you can delete the file or not,
             and return <see cref="F:DokanNet.NtStatus.Success"/> (when you can delete it) or appropriate error
             codes such as <see cref="F:DokanNet.NtStatus.AccessDenied"/>, <see cref="F:DokanNet.NtStatus.ObjectNameNotFound"/>.
            
             DeleteFile will also be called with <see cref="P:DokanNet.IDokanFileInfo.DeleteOnClose"/> set to <c>false</c>
             to notify the driver when the file is no longer requested to be deleted.
             
             When you return <see cref="F:DokanNet.NtStatus.Success"/>, you get a <see cref="M:DokanNet.IDokanOperations.Cleanup(System.String,DokanNet.IDokanFileInfo)"/> call afterwards with
             <see cref="P:DokanNet.IDokanFileInfo.DeleteOnClose"/> set to <c>true</c> and only then you have to actually
             delete the file being closed.
             </remarks>
             <param name="fileName">File path requested by the Kernel on the FileSystem.</param>
             <param name="info">An <see cref="T:DokanNet.IDokanFileInfo"/> with information about the file or directory.</param>
             <returns>Return <see cref="F:DokanNet.DokanResult.Success"/> if file can be delete or <see cref="T:DokanNet.NtStatus"/> appropriate.</returns>
             <seealso cref="M:DokanNet.IDokanOperations.DeleteDirectory(System.String,DokanNet.IDokanFileInfo)"/>
             <seealso cref="M:DokanNet.IDokanOperations.Cleanup(System.String,DokanNet.IDokanFileInfo)"/>
        </member>
        <member name="M:DokanNet.IDokanOperations.DeleteDirectory(System.String,DokanNet.IDokanFileInfo)">
             <summary>
             Check if it is possible to delete a directory.
             </summary>
             <remarks>
             You should NOT delete the file in <see cref="M:DokanNet.IDokanOperations.DeleteDirectory(System.String,DokanNet.IDokanFileInfo)"/>, but instead
             you must only check whether you can delete the file or not,
             and return <see cref="F:DokanNet.NtStatus.Success"/> (when you can delete it) or appropriate error
             codes such as <see cref="F:DokanNet.NtStatus.AccessDenied"/>, <see cref="F:DokanNet.NtStatus.ObjectPathNotFound"/>,
             <see cref="F:DokanNet.NtStatus.ObjectNameNotFound"/>.
            
             DeleteFile will also be called with <see cref="P:DokanNet.IDokanFileInfo.DeleteOnClose"/> set to <c>false</c>
             to notify the driver when the file is no longer requested to be deleted.
            
             When you return <see cref="F:DokanNet.NtStatus.Success"/>, you get a <see cref="M:DokanNet.IDokanOperations.Cleanup(System.String,DokanNet.IDokanFileInfo)"/> call afterwards with
             <see cref="P:DokanNet.IDokanFileInfo.DeleteOnClose"/> set to <c>true</c> and only then you have to actually
             delete the file being closed.
             </remarks>
             <param name="fileName">File path requested by the Kernel on the FileSystem.</param>
             <param name="info">An <see cref="T:DokanNet.IDokanFileInfo"/> with information about the file or directory.</param>
             <returns>Return <see cref="F:DokanNet.DokanResult.Success"/> if file can be delete or <see cref="T:DokanNet.NtStatus"/> appropriate.</returns>
             <seealso cref="M:DokanNet.IDokanOperations.DeleteFile(System.String,DokanNet.IDokanFileInfo)"/>
             <seealso cref="M:DokanNet.IDokanOperations.Cleanup(System.String,DokanNet.IDokanFileInfo)"/>
        </member>
        <member name="M:DokanNet.IDokanOperations.MoveFile(System.String,System.String,System.Boolean,DokanNet.IDokanFileInfo)">
            <summary>
            Move a file or directory to a new location.
            </summary>
            <param name="oldName">Path to the file to move.</param>
            <param name="newName">Path to the new location for the file.</param>
            <param name="replace">If the file should be replaced if it already exist a file with path <paramref name="newName"/>.</param>
            <param name="info">An <see cref="T:DokanNet.IDokanFileInfo"/> with information about the file or directory.</param>
            <returns><see cref="T:DokanNet.NtStatus"/> or <see cref="T:DokanNet.DokanResult"/> appropriate to the request result.</returns>
        </member>
        <member name="M:DokanNet.IDokanOperations.SetEndOfFile(System.String,System.Int64,DokanNet.IDokanFileInfo)">
            <summary>
            SetEndOfFile is used to truncate or extend a file (physical file size).
            </summary>
            <param name="fileName">File path requested by the Kernel on the FileSystem.</param>
            <param name="length">File length to set</param>
            <param name="info">An <see cref="T:DokanNet.IDokanFileInfo"/> with information about the file or directory.</param>
            <returns><see cref="T:DokanNet.NtStatus"/> or <see cref="T:DokanNet.DokanResult"/> appropriate to the request result.</returns>
        </member>
        <member name="M:DokanNet.IDokanOperations.SetAllocationSize(System.String,System.Int64,DokanNet.IDokanFileInfo)">
            <summary>
            SetAllocationSize is used to truncate or extend a file.
            </summary>
            <param name="fileName">File path requested by the Kernel on the FileSystem.</param>
            <param name="length">File length to set</param>
            <param name="info">An <see cref="T:DokanNet.IDokanFileInfo"/> with information about the file or directory.</param>
            <returns><see cref="T:DokanNet.NtStatus"/> or <see cref="T:DokanNet.DokanResult"/> appropriate to the request result.</returns>
        </member>
        <member name="M:DokanNet.IDokanOperations.LockFile(System.String,System.Int64,System.Int64,DokanNet.IDokanFileInfo)">
            <summary>
            Lock file at a specific offset and data length.
            This is only used if <see cref="F:DokanNet.DokanOptions.UserModeLock"/> is enabled.
            </summary>
            <param name="fileName">File path requested by the Kernel on the FileSystem.</param>
            <param name="offset">Offset from where the lock has to be proceed.</param>
            <param name="length">Data length to lock.</param>
            <param name="info">An <see cref="T:DokanNet.IDokanFileInfo"/> with information about the file or directory.</param>
            <returns><see cref="T:DokanNet.NtStatus"/> or <see cref="T:DokanNet.DokanResult"/> appropriate to the request result.</returns>
            <seealso cref="M:DokanNet.IDokanOperations.UnlockFile(System.String,System.Int64,System.Int64,DokanNet.IDokanFileInfo)"/>
        </member>
        <member name="M:DokanNet.IDokanOperations.UnlockFile(System.String,System.Int64,System.Int64,DokanNet.IDokanFileInfo)">
            <summary>
            Unlock file at a specific offset and data length.
            This is only used if <see cref="F:DokanNet.DokanOptions.UserModeLock"/> is enabled.
            </summary>
            <param name="fileName">File path requested by the Kernel on the FileSystem.</param>
            <param name="offset">Offset from where the unlock has to be proceed.</param>
            <param name="length">Data length to lock.</param>
            <param name="info">An <see cref="T:DokanNet.IDokanFileInfo"/> with information about the file or directory.</param>
            <returns><see cref="T:DokanNet.NtStatus"/> or <see cref="T:DokanNet.DokanResult"/> appropriate to the request result.</returns>
            <seealso cref="M:DokanNet.IDokanOperations.LockFile(System.String,System.Int64,System.Int64,DokanNet.IDokanFileInfo)"/>
        </member>
        <member name="M:DokanNet.IDokanOperations.GetDiskFreeSpace(System.Int64@,System.Int64@,System.Int64@,DokanNet.IDokanFileInfo)">
            <summary>
            Retrieves information about the amount of space that is available on a disk volume, which is the total amount of space, 
            the total amount of free space, and the total amount of free space available to the user that is associated with the calling thread.
            </summary>
            <remarks>
            Neither GetDiskFreeSpace nor <see cref="M:DokanNet.IDokanOperations.GetVolumeInformation(System.String@,DokanNet.FileSystemFeatures@,System.String@,System.UInt32@,DokanNet.IDokanFileInfo)"/> save the <see cref="P:DokanNet.IDokanFileInfo.Context"/>.
            Before these methods are called, <see cref="M:DokanNet.IDokanOperations.CreateFile(System.String,DokanNet.FileAccess,System.IO.FileShare,System.IO.FileMode,System.IO.FileOptions,System.IO.FileAttributes,DokanNet.IDokanFileInfo)"/> may not be called. (ditto <see cref="M:DokanNet.IDokanOperations.CloseFile(System.String,DokanNet.IDokanFileInfo)"/> and <see cref="M:DokanNet.IDokanOperations.Cleanup(System.String,DokanNet.IDokanFileInfo)"/>).
            </remarks>
            <param name="freeBytesAvailable">Amount of available space.</param>
            <param name="totalNumberOfBytes">Total size of storage space.</param>
            <param name="totalNumberOfFreeBytes">Amount of free space.</param>
            <param name="info">An <see cref="T:DokanNet.IDokanFileInfo"/> with information about the file or directory.</param>
            <returns><see cref="T:DokanNet.NtStatus"/> or <see cref="T:DokanNet.DokanResult"/> appropriate to the request result.</returns>
            \see <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa364937(v=vs.85).aspx"> GetDiskFreeSpaceEx function (MSDN)</a>
            <seealso cref="M:DokanNet.IDokanOperations.GetVolumeInformation(System.String@,DokanNet.FileSystemFeatures@,System.String@,System.UInt32@,DokanNet.IDokanFileInfo)"/>
        </member>
        <member name="M:DokanNet.IDokanOperations.GetVolumeInformation(System.String@,DokanNet.FileSystemFeatures@,System.String@,System.UInt32@,DokanNet.IDokanFileInfo)">
            <summary>
            Retrieves information about the file system and volume associated with the specified root directory.
            </summary>
            <remarks>
            Neither GetVolumeInformation nor <see cref="M:DokanNet.IDokanOperations.GetDiskFreeSpace(System.Int64@,System.Int64@,System.Int64@,DokanNet.IDokanFileInfo)"/> save the <see cref="P:DokanNet.IDokanFileInfo.Context"/>.
            Before these methods are called, <see cref="M:DokanNet.IDokanOperations.CreateFile(System.String,DokanNet.FileAccess,System.IO.FileShare,System.IO.FileMode,System.IO.FileOptions,System.IO.FileAttributes,DokanNet.IDokanFileInfo)"/> may not be called. (ditto <see cref="M:DokanNet.IDokanOperations.CloseFile(System.String,DokanNet.IDokanFileInfo)"/> and <see cref="M:DokanNet.IDokanOperations.Cleanup(System.String,DokanNet.IDokanFileInfo)"/>).
            
            <see cref="F:DokanNet.FileSystemFeatures.ReadOnlyVolume"/> is automatically added to the <paramref name="features"/> if <see cref="F:DokanNet.DokanOptions.WriteProtection"/> was
            specified when the volume was mounted.
            
            If <see cref="F:DokanNet.NtStatus.NotImplemented"/> is returned, the %Dokan kernel driver use following settings by default:
            | Parameter                    | Default value                                                                                    |
            |------------------------------|--------------------------------------------------------------------------------------------------|
            | \a rawVolumeNameBuffer       | <c>"DOKAN"</c>                                                                                   |
            | \a rawVolumeSerialNumber     | <c>0x19831116</c>                                                                                |
            | \a rawMaximumComponentLength | <c>256</c>                                                                                       |
            | \a rawFileSystemFlags        | <c>CaseSensitiveSearch \|\| CasePreservedNames \|\| SupportsRemoteStorage \|\| UnicodeOnDisk</c> |
            | \a rawFileSystemNameBuffer   | <c>"NTFS"</c>                                                                                    |
            </remarks>
            <param name="volumeLabel">Volume name</param>
            <param name="features"><see cref="T:DokanNet.FileSystemFeatures"/> with features enabled on the volume.</param>
            <param name="fileSystemName">The name of the specified volume.</param>
            <param name="maximumComponentLength">File name component that the specified file system supports.</param>
            <param name="info">An <see cref="T:DokanNet.IDokanFileInfo"/> with information about the file or directory.</param>
            <returns><see cref="T:DokanNet.NtStatus"/> or <see cref="T:DokanNet.DokanResult"/> appropriate to the request result.</returns>
            \see <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa364993(v=vs.85).aspx"> GetVolumeInformation function (MSDN)</a>
        </member>
        <member name="M:DokanNet.IDokanOperations.GetFileSecurity(System.String,System.Security.AccessControl.FileSystemSecurity@,System.Security.AccessControl.AccessControlSections,DokanNet.IDokanFileInfo)">
            <summary>
            Get specified information about the security of a file or directory. 
            </summary>
            <remarks>
            If <see cref="F:DokanNet.NtStatus.NotImplemented"/> is returned, dokan library will handle the request by
            building a sddl of the current process user with authenticate user rights for context menu.
            </remarks>
            \since Supported since version 0.6.0. You must specify the <see cref="F:DokanNet.Native.DOKAN_OPTIONS.Version"/> during <see cref="M:DokanNet.DokanInstance.#ctor(DokanNet.Logging.ILogger,DokanNet.Native.DOKAN_OPTIONS,DokanNet.Dokan,DokanNet.IDokanOperations)"/>.
            
            <param name="fileName">File or directory name.</param>
            <param name="security">A <see cref="T:System.Security.AccessControl.FileSystemSecurity"/> with security information to return.</param>
            <param name="sections">A <see cref="T:System.Security.AccessControl.AccessControlSections"/> with access sections to return.</param>
            <param name="info">An <see cref="T:DokanNet.IDokanFileInfo"/> with information about the file or directory.</param>
            <returns><see cref="T:DokanNet.NtStatus"/> or <see cref="T:DokanNet.DokanResult"/> appropriate to the request result.</returns>
            <seealso cref="M:DokanNet.IDokanOperations.SetFileSecurity(System.String,System.Security.AccessControl.FileSystemSecurity,System.Security.AccessControl.AccessControlSections,DokanNet.IDokanFileInfo)"/>
            \see <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa446639(v=vs.85).aspx">GetFileSecurity function (MSDN)</a>
        </member>
        <member name="M:DokanNet.IDokanOperations.SetFileSecurity(System.String,System.Security.AccessControl.FileSystemSecurity,System.Security.AccessControl.AccessControlSections,DokanNet.IDokanFileInfo)">
            <summary>
            Sets the security of a file or directory object.
            </summary>
            \since Supported since version 0.6.0. You must specify the <see cref="F:DokanNet.Native.DOKAN_OPTIONS.Version"/> during <see cref="M:DokanNet.DokanInstance.#ctor(DokanNet.Logging.ILogger,DokanNet.Native.DOKAN_OPTIONS,DokanNet.Dokan,DokanNet.IDokanOperations)"/>.
            
            <param name="fileName">File path requested by the Kernel on the FileSystem.</param>
            <param name="security">A <see cref="T:System.Security.AccessControl.FileSystemSecurity"/> with security information to set.</param>
            <param name="sections">A <see cref="T:System.Security.AccessControl.AccessControlSections"/> with access sections on which.</param>
            <param name="info">An <see cref="T:DokanNet.IDokanFileInfo"/> with information about the file or directory.</param>
            <returns><see cref="T:DokanNet.NtStatus"/> or <see cref="T:DokanNet.DokanResult"/> appropriate to the request result.</returns>
            <seealso cref="M:DokanNet.IDokanOperations.GetFileSecurity(System.String,System.Security.AccessControl.FileSystemSecurity@,System.Security.AccessControl.AccessControlSections,DokanNet.IDokanFileInfo)"/>
            \see <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa379577(v=vs.85).aspx">SetFileSecurity function (MSDN)</a>
        </member>
        <member name="M:DokanNet.IDokanOperations.Mounted(System.String,DokanNet.IDokanFileInfo)">
            <summary>
            Is called when %Dokan succeed to mount the volume.
            
            If <see cref="F:DokanNet.DokanOptions.MountManager"/> is enabled and the drive letter requested is busy,
            the <paramref name="mountPoint"/> can contain a different drive letter that the mount manager assigned us.
            </summary>
            <param name="mountPoint">The mount point assign to the instance.</param>
            <param name="info">An <see cref="T:DokanNet.IDokanFileInfo"/> with information about the file or directory.</param>
            <returns><see cref="T:DokanNet.NtStatus"/> or <see cref="T:DokanNet.DokanResult"/> appropriate to the request result.</returns>
            <see cref="M:DokanNet.IDokanOperations.Unmounted(DokanNet.IDokanFileInfo)"/>
        </member>
        <member name="M:DokanNet.IDokanOperations.Unmounted(DokanNet.IDokanFileInfo)">
            <summary>
            Is called when %Dokan is unmounting the volume.
            </summary>
            <param name="info">An <see cref="T:DokanNet.IDokanFileInfo"/> with information about the file or directory.</param>
            <returns><see cref="T:DokanNet.NtStatus"/> or <see cref="T:DokanNet.DokanResult"/> appropriate to the request result.</returns>
            <seealso cref="M:DokanNet.IDokanOperations.Mounted(System.String,DokanNet.IDokanFileInfo)"/>
        </member>
        <member name="M:DokanNet.IDokanOperations.FindStreams(System.String,System.Collections.Generic.IList{DokanNet.FileInformation}@,DokanNet.IDokanFileInfo)">
            <summary>
            Retrieve all NTFS Streams informations on the file.
            This is only called if <see cref="F:DokanNet.DokanOptions.AltStream"/> is enabled.
            </summary>
            <remarks>For files, the first item in <paramref name="streams"/> is information about the 
            default data stream <c>"::$DATA"</c>.</remarks>
            \since Supported since version 0.8.0. You must specify the <see cref="F:DokanNet.Native.DOKAN_OPTIONS.Version"/> during <see cref="M:DokanNet.DokanInstance.#ctor(DokanNet.Logging.ILogger,DokanNet.Native.DOKAN_OPTIONS,DokanNet.Dokan,DokanNet.IDokanOperations)"/>.
            
            <param name="fileName">File path requested by the Kernel on the FileSystem.</param>
            <param name="streams">List of <see cref="T:DokanNet.FileInformation"/> for each streams present on the file.</param>
            <param name="info">An <see cref="T:DokanNet.IDokanFileInfo"/> with information about the file or directory.</param>
            <returns>Return <see cref="T:DokanNet.NtStatus"/> or <see cref="T:DokanNet.DokanResult"/> appropriate to the request result.</returns>
            \see <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa364424(v=vs.85).aspx">FindFirstStreamW function (MSDN)</a>
            \see <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa365993(v=vs.85).aspx">About KTM (MSDN)</a>
        </member>
        <member name="T:DokanNet.IDokanOperationsUnsafe">
            <summary>
            This is a sub-interface of <see cref="T:DokanNet.IDokanOperations"/> that can optionally be implemented
            to get access to the raw, unmanaged buffers for ReadFile() and WriteFile() for performance optimization.
            Marshalling the unmanaged buffers to and from byte[] arrays for every call of these APIs incurs an extra copy
            that can be avoided by reading from or writing directly to the unmanaged buffers.
            
            Implementation of this interface is optional. If it is implemented, the overloads of
            Read/WriteFile(IntPtr, length) will be called instead of Read/WriteFile(byte[]). The caller can fill or read
            from the unmanaged API with Marshal.Copy, Buffer.MemoryCopy or similar.
            </summary>
        </member>
        <member name="M:DokanNet.IDokanOperationsUnsafe.ReadFile(System.String,System.IntPtr,System.UInt32,System.Int32@,System.Int64,DokanNet.IDokanFileInfo)">
            <summary>
            ReadFile callback on the file previously opened in <see cref="M:DokanNet.IDokanOperations.CreateFile(System.String,DokanNet.FileAccess,System.IO.FileShare,System.IO.FileMode,System.IO.FileOptions,System.IO.FileAttributes,DokanNet.IDokanFileInfo)"/>.
            It can be called by different thread at the same time,
            therefore the read has to be thread safe.
            </summary>
            <param name="fileName">File path requested by the Kernel on the FileSystem.</param>
            <param name="buffer">Read buffer that has to be fill with the read result.</param>
            <param name="bufferLength">The size of 'buffer' in bytes.
            The buffer size depends of the read size requested by the kernel.</param>
            <param name="bytesRead">Total number of bytes that has been read.</param>
            <param name="offset">Offset from where the read has to be proceed.</param>
            <param name="info">An <see cref="T:DokanNet.IDokanFileInfo"/> with information about the file or directory.</param>
            <returns><see cref="T:DokanNet.NtStatus"/> or <see cref="T:DokanNet.DokanResult"/> appropriate to the request result.</returns>
            <seealso cref="M:DokanNet.IDokanOperationsUnsafe.WriteFile(System.String,System.IntPtr,System.UInt32,System.Int32@,System.Int64,DokanNet.IDokanFileInfo)"/>
        </member>
        <member name="M:DokanNet.IDokanOperationsUnsafe.WriteFile(System.String,System.IntPtr,System.UInt32,System.Int32@,System.Int64,DokanNet.IDokanFileInfo)">
            <summary>
            WriteFile callback on the file previously opened in <see cref="M:DokanNet.IDokanOperations.CreateFile(System.String,DokanNet.FileAccess,System.IO.FileShare,System.IO.FileMode,System.IO.FileOptions,System.IO.FileAttributes,DokanNet.IDokanFileInfo)"/>
            It can be called by different thread at the same time,
            therefore the write/context has to be thread safe.
            </summary>
            <param name="fileName">File path requested by the Kernel on the FileSystem.</param>
            <param name="buffer">Data that has to be written.</param>
            <param name="bufferLength">The size of 'buffer' in bytes.</param>
            <param name="bytesWritten">Total number of bytes that has been write.</param>
            <param name="offset">Offset from where the write has to be proceed.</param>
            <param name="info">An <see cref="T:DokanNet.IDokanFileInfo"/> with information about the file or directory.</param>
            <returns><see cref="T:DokanNet.NtStatus"/> or <see cref="T:DokanNet.DokanResult"/> appropriate to the request result.</returns>
            <seealso cref="M:DokanNet.IDokanOperationsUnsafe.ReadFile(System.String,System.IntPtr,System.UInt32,System.Int32@,System.Int64,DokanNet.IDokanFileInfo)"/>
        </member>
        <member name="T:DokanNet.Logging.ConsoleLogger">
            <summary>
            Log to the console.
            </summary>
        </member>
        <member name="M:DokanNet.Logging.ConsoleLogger.#ctor(System.String,System.Globalization.DateTimeFormatInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:DokanNet.Logging.ConsoleLogger"/> class.
            </summary>
            <param name="loggerName">Optional name to be added to each log line.</param>
            <param name="dateTimeFormatInfo">An object that supplies format information for DateTime.</param>
        </member>
        <member name="P:DokanNet.Logging.ConsoleLogger.DebugEnabled">
            <inheritdoc />        
        </member>
        <member name="M:DokanNet.Logging.ConsoleLogger.Debug(System.String,System.Object[])">
            <inheritdoc />
        </member>
        <member name="M:DokanNet.Logging.ConsoleLogger.Info(System.String,System.Object[])">
            <inheritdoc />
        </member>
        <member name="M:DokanNet.Logging.ConsoleLogger.Warn(System.String,System.Object[])">
            <inheritdoc />
        </member>
        <member name="M:DokanNet.Logging.ConsoleLogger.Error(System.String,System.Object[])">
            <inheritdoc />
        </member>
        <member name="M:DokanNet.Logging.ConsoleLogger.Fatal(System.String,System.Object[])">
            <inheritdoc />
        </member>
        <member name="M:DokanNet.Logging.ConsoleLogger.Dispose(System.Boolean)">
            <summary>
            Dispose the object from the native resources.
            </summary>
            <param name="disposing">Whether it was call by <see cref="M:DokanNet.Logging.ConsoleLogger.Dispose"/></param>
        </member>
        <member name="M:DokanNet.Logging.ConsoleLogger.Dispose">
            <summary>
            Dispose the object from the native resources.
            </summary>
        </member>
        <member name="T:DokanNet.Logging.DebugViewLogger">
            <summary>
            Write log using OutputDebugString 
            </summary>
            <remarks>
            To see the output in visual studio 
            Project + %Properties, Debug tab, check "Enable unmanaged code debugging".
            </remarks> 
        </member>
        <member name="M:DokanNet.Logging.DebugViewLogger.#ctor(System.String,System.Globalization.DateTimeFormatInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:DokanNet.Logging.DebugViewLogger"/> class.
            </summary>
            <param name="loggerName">Optional name to be added to each log line.</param>
            <param name="dateTimeFormatInfo">An object that supplies format information for DateTime.</param>
        </member>
        <member name="P:DokanNet.Logging.DebugViewLogger.DebugEnabled">
            <inheritdoc />
        </member>
        <member name="M:DokanNet.Logging.DebugViewLogger.Debug(System.String,System.Object[])">
            <inheritdoc />
        </member>
        <member name="M:DokanNet.Logging.DebugViewLogger.Info(System.String,System.Object[])">
            <inheritdoc />
        </member>
        <member name="M:DokanNet.Logging.DebugViewLogger.Warn(System.String,System.Object[])">
            <inheritdoc />
        </member>
        <member name="M:DokanNet.Logging.DebugViewLogger.Error(System.String,System.Object[])">
            <inheritdoc />
        </member>
        <member name="M:DokanNet.Logging.DebugViewLogger.Fatal(System.String,System.Object[])">
            <inheritdoc />
        </member>
        <member name="T:DokanNet.Logging.ILogger">
            <summary>
            The %Logger interface.
            </summary>
        </member>
        <member name="P:DokanNet.Logging.ILogger.DebugEnabled">
            <summary>
            Gets a value indicating whether the logger wishes to receive debug messages.
            </summary>
        </member>
        <member name="M:DokanNet.Logging.ILogger.Debug(System.String,System.Object[])">
            <summary>
            Log a debug message
            </summary>
            <param name="message">The message to write to the log</param>
            <param name="args">Arguments to use to format the <paramref name="message"/></param>
        </member>
        <member name="M:DokanNet.Logging.ILogger.Info(System.String,System.Object[])">
            <summary>
            Log a info message
            </summary>
            <param name="message">The message to write to the log</param>
            <param name="args">Arguments to use to format the <paramref name="message"/></param>
        </member>
        <member name="M:DokanNet.Logging.ILogger.Warn(System.String,System.Object[])">
            <summary>
            Log a warning message
            </summary>
            <param name="message">The message to write to the log</param>
            <param name="args">Arguments to use to format the <paramref name="message"/></param>
        </member>
        <member name="M:DokanNet.Logging.ILogger.Error(System.String,System.Object[])">
            <summary>
            Log a error message
            </summary>
            <param name="message">The message to write to the log</param>
            <param name="args">Arguments to use to format the <paramref name="message"/></param>
        </member>
        <member name="M:DokanNet.Logging.ILogger.Fatal(System.String,System.Object[])">
            <summary>
            Log a fatal error message
            </summary>
            <param name="message">The message to write to the log</param>
            <param name="args">Arguments to use to format the <paramref name="message"/></param>
        </member>
        <member name="T:DokanNet.Logging.Logger">
            <summary>
            Handle log messages with callbacks
            </summary>
        </member>
        <member name="M:DokanNet.Logging.Logger.#ctor(System.Action{System.String,System.Object[]},System.Action{System.String,System.Object[]},System.Action{System.String,System.Object[]},System.Action{System.String,System.Object[]},System.Action{System.String,System.Object[]})">
            <summary>
            Initializes a new instance of the <see cref="T:DokanNet.Logging.Logger"/> class.
            </summary>
            <param name="debug">An <see cref="T:System.Action`1"/> that are called when a debug log message are arriving.</param>
            <param name="info">An <see cref="T:System.Action`1"/> that are called when a information log message are arriving</param>
            <param name="warn">An <see cref="T:System.Action`1"/> that are called when a warning log message are arriving</param>
            <param name="error">An <see cref="T:System.Action`1"/> that are called when a error log message are arriving</param>
            <param name="fatal">An <see cref="T:System.Action`1"/> that are called when a fatal error log message are arriving</param>
        </member>
        <member name="P:DokanNet.Logging.Logger.DebugEnabled">
            <inheritdoc />
        </member>
        <member name="M:DokanNet.Logging.Logger.Debug(System.String,System.Object[])">
            <inheritdoc />
        </member>
        <member name="M:DokanNet.Logging.Logger.Info(System.String,System.Object[])">
            <inheritdoc />
        </member>
        <member name="M:DokanNet.Logging.Logger.Warn(System.String,System.Object[])">
            <inheritdoc />
        </member>
        <member name="M:DokanNet.Logging.Logger.Error(System.String,System.Object[])">
            <inheritdoc />
        </member>
        <member name="M:DokanNet.Logging.Logger.Fatal(System.String,System.Object[])">
            <inheritdoc />
        </member>
        <member name="T:DokanNet.Logging.LoggerExtensions">
            <summary>
            Extension functions to log messages.
            </summary>
        </member>
        <member name="M:DokanNet.Logging.LoggerExtensions.FormatMessageForLogging(System.String,System.String,System.String,System.Globalization.DateTimeFormatInfo)">
            <summary>
            Format a log message.
            </summary>
            <param name="message">Message to format.</param>
            <param name="category">Optional category to add to the log message.</param>
            <param name="loggerName">Optional log name to at to the log message.</param>
            <param name="dateTimeFormatInfo">An object that supplies format information for DateTime.</param>
            <returns>A formated log message.</returns>
        </member>
        <member name="M:DokanNet.Logging.LoggerExtensions.FormatMessageForLogging(System.String,System.Boolean,System.String,System.String,System.Globalization.DateTimeFormatInfo)">
            <summary>
            Format a log message.
            </summary>
            <param name="message">Message to format.</param>
            <param name="addDateTime">If date and time shout be added to the log message.</param>
            <param name="category">Optional category to add to the log message.</param>
            <param name="loggerName">Optional log name to at to the log message.</param>
            <param name="dateTimeFormatInfo">An object that supplies format information for DateTime.</param>
            <returns>A formated log message.</returns>
        </member>
        <member name="T:DokanNet.Logging.NullLogger">
            <summary>
            Ignore all log messages.
            </summary>
        </member>
        <member name="P:DokanNet.Logging.NullLogger.DebugEnabled">
            <inheritdoc />
        </member>
        <member name="M:DokanNet.Logging.NullLogger.Debug(System.String,System.Object[])">
            <inheritdoc />
        </member>
        <member name="M:DokanNet.Logging.NullLogger.Error(System.String,System.Object[])">
            <inheritdoc />
        </member>
        <member name="M:DokanNet.Logging.NullLogger.Fatal(System.String,System.Object[])">
            <inheritdoc />
        </member>
        <member name="M:DokanNet.Logging.NullLogger.Info(System.String,System.Object[])">
            <inheritdoc />
        </member>
        <member name="M:DokanNet.Logging.NullLogger.Warn(System.String,System.Object[])">
            <inheritdoc />
        </member>
        <member name="T:DokanNet.Logging.TraceLogger">
            <summary>
            Write all log messages to the <see cref="T:System.Diagnostics.Trace"/>.
            </summary>
        </member>
        <member name="P:DokanNet.Logging.TraceLogger.DebugEnabled">
            <inheritdoc />
        </member>
        <member name="M:DokanNet.Logging.TraceLogger.Debug(System.String,System.Object[])">
            <inheritdoc />
        </member>
        <member name="M:DokanNet.Logging.TraceLogger.Info(System.String,System.Object[])">
            <inheritdoc />
        </member>
        <member name="M:DokanNet.Logging.TraceLogger.Warn(System.String,System.Object[])">
            <inheritdoc />
        </member>
        <member name="M:DokanNet.Logging.TraceLogger.Error(System.String,System.Object[])">
            <inheritdoc />
        </member>
        <member name="M:DokanNet.Logging.TraceLogger.Fatal(System.String,System.Object[])">
            <inheritdoc />
        </member>
        <member name="T:DokanNet.MockDokanFileInfo">
            <summary>
            Mockable Dokan file information on the current operation.
            </summary>
            <remarks>
            Because <see cref="T:DokanNet.DokanFileInfo"/> cannot be instantiated in C#, it's very difficult to write
            test harnesses for unit testing.  This class implements the same public interface so it's
            possible to mock it, such that the implementor of IDokanOperations can essentially act like
            the dokany kernel driver and call into that implementation to verify correct behavior.  It
            also has support methods available to cause it (and the Dokan.Net library) to behave in certain
            ways useful for testing all potential returns, both success and failure.
            </remarks>
        </member>
        <member name="F:DokanNet.MockDokanFileInfo._dokanOptions">
            <summary>
            A <see cref="T:DokanNet.Native.DOKAN_OPTIONS"/> structure used to help the kernel notification functions work.
            </summary>
        </member>
        <member name="P:DokanNet.MockDokanFileInfo.MountPoint">
            <summary>
            This must be set to a potentially valid path. Examples might be @"M:\\" or @"C:\\JunctionPoint".
            </summary>
            <remarks>The trailing backslash is not optional for drive letters, and must be omitted for paths.</remarks>
        </member>
        <member name="P:DokanNet.MockDokanFileInfo.Context">
            <summary>
            Gets or sets context that can be used to carry information between operation.
            The Context can carry an arbitrary type, like <c><see cref="T:System.IO.FileStream"/></c>, <c>struct</c>, <c>int</c>,
            or internal reference that will help the implementation understand the request context of the event.
            </summary>
        </member>
        <member name="P:DokanNet.MockDokanFileInfo.ProcessId">
            <summary>
            Process id for the thread that originally requested a given I/O
            operation.
            </summary>
        </member>
        <member name="P:DokanNet.MockDokanFileInfo.IsDirectory">
            <summary>
            Gets or sets a value indicating whether a filename references a directory.
            Must be set in <see cref="M:DokanNet.IDokanOperations.CreateFile(System.String,DokanNet.FileAccess,System.IO.FileShare,System.IO.FileMode,System.IO.FileOptions,System.IO.FileAttributes,DokanNet.IDokanFileInfo)"/> if the file is to
            appear to be a folder.
            </summary>
        </member>
        <member name="P:DokanNet.MockDokanFileInfo.DeleteOnClose">
            <summary>
            Gets or sets a value indicating whether the file has to be deleted
            during the <see cref="M:DokanNet.IDokanOperations.Cleanup(System.String,DokanNet.IDokanFileInfo)"/> event.
            </summary>
        </member>
        <member name="P:DokanNet.MockDokanFileInfo.PagingIo">
            <summary>
            Read or write is paging IO.
            </summary>
        </member>
        <member name="P:DokanNet.MockDokanFileInfo.SynchronousIo">
            <summary>
            Read or write is synchronous IO.
            </summary>
        </member>
        <member name="P:DokanNet.MockDokanFileInfo.NoCache">
            <summary>
            Read or write directly from data source without cache.
            </summary>
        </member>
        <member name="P:DokanNet.MockDokanFileInfo.WriteToEndOfFile">
            <summary>
            If <c>true</c>, write to the current end of file instead 
            of using the <c>Offset</c> parameter.
            </summary>
        </member>
        <member name="F:DokanNet.MockDokanFileInfo.WhatGetRequestorShouldReturn">
            <summary>
            Set this to null if you want to test against token unavailability.
            </summary>
            <remarks>Initialized to the current process token, which is the only
            token a standard user account can get.</remarks>
        </member>
        <member name="M:DokanNet.MockDokanFileInfo.GetRequestor">
            <summary>
            This method needs to be called in <see cref="M:DokanNet.IDokanOperations.CreateFile(System.String,DokanNet.FileAccess,System.IO.FileShare,System.IO.FileMode,System.IO.FileOptions,System.IO.FileAttributes,DokanNet.IDokanFileInfo)"/> to
            determine what account and what privileges are available to the filesystem client.
            </summary>
            <returns>An <c><see cref="T:System.Security.Principal.WindowsIdentity"/></c> with the access token, 
            -or- <c>null</c> if the operation was not successful.</returns>
            <remarks>This Mock implementation returns <see cref="F:DokanNet.MockDokanFileInfo.WhatGetRequestorShouldReturn"/>.
            </remarks>
        </member>
        <member name="P:DokanNet.MockDokanFileInfo.WhatTryResetTimeoutShouldReturn">
            <summary>
            Set this to false if you want to test against TryResetTimeout failure
            </summary>
        </member>
        <member name="M:DokanNet.MockDokanFileInfo.TryResetTimeout(System.Int32)">
            <summary>
            Extends the time out of the current IO operation in driver.
            </summary>
            <param name="milliseconds">Number of milliseconds to extend with.</param>
            <returns>true if the operation was successful.</returns>
            <remarks>This Mock implementation returns <see cref="P:DokanNet.MockDokanFileInfo.WhatTryResetTimeoutShouldReturn"/>.
            </remarks>
        </member>
        <member name="M:DokanNet.MockDokanFileInfo.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:DokanNet.NativeStructWrapper`1">
            <summary>
            This class allocates unmanaged memory for a native structure and initializes
            that memory by marshalling a managed object. It gurantees that the managed
            object stays alive and the unmanaged memory block is valid for at least the
            lifetime of this object and that the unmanaged memory is released when this
            object is disposed.
            
            Since this class derives form SafeBuffer there are many instance methods
            available to read and modify the unmanaged buffer in a safe way and when
            marshalled to native code in for example a P/Invoke call, it gets automatically
            translated to the address of the unmanaged memory block. It also uses reference
            counting and is guaranteed to stay alive during such calls.
            <see cref="T:System.Runtime.InteropServices.SafeBuffer"/>
            </summary>
            <typeparam name="T">Type of managed object</typeparam>
        </member>
        <member name="M:DokanNet.NativeStructWrapper`1.#ctor(`0)">
            <summary>
            Initializes a new instance by allocating unmanaged memory and marshalling
            the supplied managed object to that memory.
            </summary>
            <param name="obj">Managed object to marshal to unmanaged memory</param>
        </member>
        <member name="M:DokanNet.NativeStructWrapper`1.#ctor">
            <summary>
            Initializes an empty instance. Used internally by native marshaller and
            not intended to be used directly from user code.
            </summary>
        </member>
        <member name="P:DokanNet.NativeStructWrapper`1.Object">
            <summary>
            Managed object that was originally marshalled to unmanaged memory.
            </summary>
        </member>
        <member name="M:DokanNet.NativeStructWrapper`1.ReleaseHandle">
            <summary>
            Releases unmanaged memory used by this instance.
            </summary>
            <returns>Always returns true</returns>
        </member>
        <member name="T:DokanNet.Native.BY_HANDLE_FILE_INFORMATION">
            <summary>
            Contains information that the <see cref="M:DokanNet.DokanOperationProxy.GetFileInformationProxy(System.String,DokanNet.Native.BY_HANDLE_FILE_INFORMATION@,DokanNet.DokanFileInfo)"/> function retrieves.
            </summary>
            <remarks>
            The identifier that is stored in the nFileIndexHigh and nFileIndexLow members is called the file ID.
            Support for file IDs is file system-specific. File IDs are not guaranteed to be unique over time,
            because file systems are free to reuse them. In some cases, the file ID for a file can change over time.
            
            In the FAT file system, the file ID is generated from the first cluster of the containing directory
            and the byte offset within the directory of the entry for the file. Some defragmentation products
            change this byte offset. (Windows in-box defragmentation does not.) Thus, a FAT file ID can change
            over time.Renaming a file in the FAT file system can also change the file ID, but only if the new
            file name is longer than the old one.
            
            In the NTFS file system, a file keeps the same file ID until it is deleted. You can replace one file
            with another file without changing the file ID by using the ReplaceFile function. However, the file ID
            of the replacement file, not the replaced file, is retained as the file ID of the resulting file.
            
            Not all file systems can record creation and last access time, and not all file systems record them
            in the same manner. For example, on a Windows FAT file system, create time has a resolution of
            10 milliseconds, write time has a resolution of 2 seconds, and access time has a resolution of
            1 day (the access date). On the NTFS file system, access time has a resolution of 1 hour.
            </remarks>
            \see <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa363788%28v=vs.85%29.aspx?f=255&amp;MSPPError=-2147217396">BY_HANDLE_FILE_INFORMATION structure (MSDN)</a>
        </member>
        <member name="F:DokanNet.Native.BY_HANDLE_FILE_INFORMATION.dwFileAttributes">
            <summary>
            The file attributes. For possible values and their descriptions.
            </summary>
        </member>
        <member name="F:DokanNet.Native.BY_HANDLE_FILE_INFORMATION.ftCreationTime">
            <summary>
            A <see cref="T:System.Runtime.InteropServices.ComTypes.FILETIME"/> structure that specifies when a file or directory is created. 
            If the underlying file system does not support creation time, this member is zero (0).
            </summary>
        </member>
        <member name="F:DokanNet.Native.BY_HANDLE_FILE_INFORMATION.ftLastAccessTime">
            <summary>
             A <see cref="T:System.Runtime.InteropServices.ComTypes.FILETIME"/> structure.
            For a file, the structure specifies the last time that a file is read from or written to.
            For a directory, the structure specifies when the directory is created.
            For both files and directories, the specified date is correct, but the time of day is always set to midnight.
            If the underlying file system does not support the last access time, this member is zero (0).
            </summary>
        </member>
        <member name="F:DokanNet.Native.BY_HANDLE_FILE_INFORMATION.ftLastWriteTime">
            <summary>
            A <see cref="T:System.Runtime.InteropServices.ComTypes.FILETIME"/> structure. 
            For a file, the structure specifies the last time that a file is written to. 
            For a directory, the structure specifies when the directory is created. 
            If the underlying file system does not support the last write time, this member is zero (0).
            </summary>
        </member>
        <member name="F:DokanNet.Native.BY_HANDLE_FILE_INFORMATION.dwVolumeSerialNumber">
            <summary>
            The serial number of the volume that contains a file.
            </summary>
        </member>
        <member name="F:DokanNet.Native.BY_HANDLE_FILE_INFORMATION.nFileSizeHigh">
            <summary>
            The high-order part of the file size.
            </summary>
        </member>
        <member name="F:DokanNet.Native.BY_HANDLE_FILE_INFORMATION.nFileSizeLow">
            <summary>
            The low-order part of the file size.
            </summary>
        </member>
        <member name="F:DokanNet.Native.BY_HANDLE_FILE_INFORMATION.dwNumberOfLinks">
            <summary>
            The number of links to this file. 
            For the FAT file system this member is always 1. 
            For the NTFS file system, it can be more than 1.
            </summary>
        </member>
        <member name="F:DokanNet.Native.BY_HANDLE_FILE_INFORMATION.nFileIndexHigh">
            <summary>
            The high-order part of a unique identifier that is associated with a file. 
            For more information, see <see cref="F:DokanNet.Native.BY_HANDLE_FILE_INFORMATION.nFileIndexLow"/>.
            </summary>
        </member>
        <member name="F:DokanNet.Native.BY_HANDLE_FILE_INFORMATION.nFileIndexLow">
            <summary>
            The low-order part of a unique identifier that is associated with a file.
            
            The identifier (low and high parts) and the volume serial number uniquely 
            identify a file on a single computer. To determine whether two open handles 
            represent the same file, combine the identifier and the volume serial number 
            for each file and compare them.
            
            The ReFS file system, introduced with Windows Server 2012, includes 128-bit 
            file identifiers. To retrieve the 128-bit file identifier use the 
            GetFileInformationByHandleEx function with FileIdInfo to retrieve 
            the FILE_ID_INFO structure. The 64-bit identifier in this structure is not 
            guaranteed to be unique on ReFS.
            </summary>
        </member>
        <member name="T:DokanNet.Native.DOKAN_OPERATIONS">
            <summary>
            Dokan API callbacks interface
            
            A struct of callbacks that describe all Dokan API operation
            that will be called when Windows access to the filesystem.
            
            If an error occurs, return <see cref="T:DokanNet.NtStatus"/>.
            
            All this callbacks can be set to <c>null</c> or return <see cref="F:DokanNet.NtStatus.NotImplemented"/>
            if you dont want to support one of them. Be aware that returning such value to important callbacks
            such <see cref="F:DokanNet.Native.DOKAN_OPERATIONS.ZwCreateFile"/>/<see cref="F:DokanNet.Native.DOKAN_OPERATIONS.ReadFile"/>/... would make the filesystem not working or unstable.
            
            Se <see cref="T:DokanNet.IDokanOperations"/> for more information about the fields.
            </summary>
            <remarks>This is the same struct as <c>_DOKAN_OPERATIONS</c> (dokan.h) in the C version of Dokan.</remarks>
        </member>
        <member name="T:DokanNet.Native.DOKAN_OPTIONS">
            <summary>
            Dokan mount options used to describe dokan device behaviour
            </summary>
            <see cref="M:DokanNet.Native.NativeMethods.DokanMain(DokanNet.Native.DOKAN_OPTIONS,DokanNet.Native.DOKAN_OPERATIONS)"/>
            <remarks>This is the same structure as <c>PDOKAN_OPTIONS</c> (dokan.h) in the C version of Dokan.</remarks>
        </member>
        <member name="F:DokanNet.Native.DOKAN_OPTIONS.Version">
            <summary>
            Version of the dokan features requested (version "123" is equal to Dokan version 1.2.3).
            </summary>
        </member>
        <member name="F:DokanNet.Native.DOKAN_OPTIONS.SingleThread">
            <summary>
            Only use a single thread to process events. This is highly not recommended as can easily create a bottleneck.
            </summary>
        </member>
        <member name="F:DokanNet.Native.DOKAN_OPTIONS.Options">
            <summary>
            Features enable for the mount. See <see cref="T:DokanNet.DokanOptions"/>.
            </summary>
        </member>
        <member name="F:DokanNet.Native.DOKAN_OPTIONS.GlobalContext">
            <summary>
            FileSystem can store anything here.
            </summary>
        </member>
        <member name="F:DokanNet.Native.DOKAN_OPTIONS.MountPoint">
            <summary>
            Mount point.
            Can be <c>M:\\</c>(drive letter) or <c>C:\\mount\\dokan</c> (path in NTFS).
            </summary>
        </member>
        <member name="F:DokanNet.Native.DOKAN_OPTIONS.UNCName">
            <summary>
            UNC name used for network volume.
            </summary>
        </member>
        <member name="P:DokanNet.Native.DOKAN_OPTIONS.TimeOut">
            <summary>
            Max timeout in milliseconds of each request before Dokan give up.
            </summary>
        </member>
        <member name="F:DokanNet.Native.DOKAN_OPTIONS.AllocationUnitSize">
            <summary>
            Allocation Unit Size of the volume. This will behave on the file size.
            </summary>
        </member>
        <member name="F:DokanNet.Native.DOKAN_OPTIONS.SectorSize">
            <summary>
            Sector Size of the volume. This will behave on the file size.
            </summary>
        </member>
        <member name="F:DokanNet.Native.DOKAN_OPTIONS.VolumeSecurityDescriptorLength">
            <summary>
            Length of the optional VolumeSecurityDescriptor provided. Set 0 will disable the option.
            </summary>
        </member>
        <member name="F:DokanNet.Native.DOKAN_OPTIONS.VolumeSecurityDescriptor">
            <summary>
            Optional Volume Security descriptor. See <a href="https://docs.microsoft.com/en-us/windows/win32/api/securitybaseapi/nf-securitybaseapi-initializesecuritydescriptor">InitializeSecurityDescriptor</a>
            </summary>
        </member>
        <member name="T:DokanNet.Native.NativeMethods">
            <summary>
            Native API to the kernel Dokan driver.
            </summary>
        </member>
        <member name="M:DokanNet.Native.NativeMethods.DokanInit">
            <summary>
            Initialize all required Dokan internal resources.
            
            This needs to be called only once before trying to use <see cref="M:DokanNet.Native.NativeMethods.DokanMain(DokanNet.Native.DOKAN_OPTIONS,DokanNet.Native.DOKAN_OPERATIONS)"/> or <see cref="M:DokanNet.Native.NativeMethods.DokanCreateFileSystem(System.Runtime.InteropServices.SafeBuffer,System.Runtime.InteropServices.SafeBuffer,DokanNet.DokanHandle@)"/> for the first time.
            Otherwise both will fail and raise an exception.
            </summary>
        </member>
        <member name="M:DokanNet.Native.NativeMethods.DokanShutdown">
             <summary>
             Release all allocated resources by <see cref="M:DokanNet.Native.NativeMethods.DokanInit"/> when they are no longer needed.
            
             This should be called when the application no longer expects to create a new FileSystem with
             <see cref="M:DokanNet.Native.NativeMethods.DokanMain(DokanNet.Native.DOKAN_OPTIONS,DokanNet.Native.DOKAN_OPERATIONS)"/> or <see cref="M:DokanNet.Native.NativeMethods.DokanCreateFileSystem(System.Runtime.InteropServices.SafeBuffer,System.Runtime.InteropServices.SafeBuffer,DokanNet.DokanHandle@)"/> and after all devices are unmount.
             </summary>
        </member>
        <member name="M:DokanNet.Native.NativeMethods.DokanMain(DokanNet.Native.DOKAN_OPTIONS,DokanNet.Native.DOKAN_OPERATIONS)">
            <summary>
            Mount a new Dokan Volume.
            This function block until the device is unmount.
            If the mount fail, it will directly return an error.
            </summary>
            <param name="options">A <see cref="T:DokanNet.Native.DOKAN_OPTIONS"/> that describe the mount.</param>
            <param name="operations">Instance of <see cref="T:DokanNet.Native.DOKAN_OPERATIONS"/> that will be called for each request made by the kernel.</param>
            <returns><see cref="T:DokanNet.DokanStatus"/></returns>
        </member>
        <member name="M:DokanNet.Native.NativeMethods.DokanCreateFileSystem(System.Runtime.InteropServices.SafeBuffer,System.Runtime.InteropServices.SafeBuffer,DokanNet.DokanHandle@)">
            <summary>
            Mount a new Dokan Volume.
            
            It is mandatory to have called <see cref="M:DokanNet.Native.NativeMethods.DokanInit"/> previously to use this API.
            This function returns directly on device mount or on failure.
            <see cref="M:DokanNet.Native.NativeMethods.DokanWaitForFileSystemClosed(DokanNet.DokanHandle,System.UInt32)"/> can be used to wait until the device is unmount.
            </summary>
            <param name="options">A <see cref="T:DokanNet.NativeStructWrapper`1"/> that describe the mount.</param>
            <param name="operations">Instance of <see cref="T:DokanNet.NativeStructWrapper`1"/> that will be called for each request made by the kernel.</param>
            <param name="dokanInstance">Dokan mount instance context that can be used for related instance calls like <see cref="M:DokanNet.Native.NativeMethods.DokanIsFileSystemRunning(DokanNet.DokanHandle)"/>.</param>
            <returns><see cref="T:DokanNet.DokanStatus"/></returns>
        </member>
        <member name="M:DokanNet.Native.NativeMethods.DokanIsFileSystemRunning(DokanNet.DokanHandle)">
            <summary>
            Check if the FileSystem is still running or not.
            </summary>
            <param name="dokanInstance">The dokan mount context created by <see cref="M:DokanNet.Native.NativeMethods.DokanCreateFileSystem(System.Runtime.InteropServices.SafeBuffer,System.Runtime.InteropServices.SafeBuffer,DokanNet.DokanHandle@)"/>.</param>
            <returns>Whether the FileSystem is still running or not.</returns>
        </member>
        <member name="M:DokanNet.Native.NativeMethods.DokanWaitForFileSystemClosed(DokanNet.DokanHandle,System.UInt32)">
            <summary>
            Wait until the FileSystem is unmount.
            </summary>
            <param name="dokanInstance">The dokan mount context created by <see cref="M:DokanNet.Native.NativeMethods.DokanCreateFileSystem(System.Runtime.InteropServices.SafeBuffer,System.Runtime.InteropServices.SafeBuffer,DokanNet.DokanHandle@)"/>.</param>
            <param name="milliSeconds">The time-out interval, in milliseconds. If a nonzero value is specified, the function waits until the object is signaled or the interval elapses. If set to zero,
            the function does not enter a wait state if the object is not signaled; it always returns immediately. If set to INFINITE, the function will return only when the object is signaled.</param>
            <returns>See <a href="https://docs.microsoft.com/en-us/windows/win32/api/synchapi/nf-synchapi-waitforsingleobject">WaitForSingleObject</a> for a description of return values.</returns>
        </member>
        <member name="M:DokanNet.Native.NativeMethods.DokanRegisterWaitForFileSystemClosed(DokanNet.DokanHandle,System.IntPtr@,DokanNet.Native.NativeWaitOrTimerCallback,System.IntPtr,System.UInt32)">
            <summary>
            Register a callback for when the FileSystem is unmounted.
            </summary>
            <param name="dokanInstance">The dokan mount context created by <see cref="M:DokanNet.Native.NativeMethods.DokanCreateFileSystem(System.Runtime.InteropServices.SafeBuffer,System.Runtime.InteropServices.SafeBuffer,DokanNet.DokanHandle@)"/>.</param>
            <param name="handle">Wait handle representing the registered wait. Needs to be freed by calling <see cref="M:DokanNet.Native.NativeMethods.DokanUnregisterWaitForFileSystemClosed(System.IntPtr,System.Boolean)"/>.</param>
            <param name="callback">Callback function to be called when file system is unmounted or timeout occurs.</param>
            <param name="context">Parameter to send to callback function.</param>
            <param name="milliSeconds">The time-out interval, in milliseconds. If a nonzero value is specified, the function waits until the object is signaled or the interval elapses. If <paramref name="milliSeconds" /> is zero,
            the function does not enter a wait state if the object is not signaled; it always returns immediately. If <paramref name="milliSeconds" /> is INFINITE, the function will return only when the object is signaled.</param>
            <returns>See <a href="https://docs.microsoft.com/en-us/windows/win32/api/synchapi/nf-synchapi-waitforsingleobject">WaitForSingleObject</a> for a description of return values.</returns>
        </member>
        <member name="M:DokanNet.Native.NativeMethods.DokanUnregisterWaitForFileSystemClosed(System.IntPtr,System.Boolean)">
            <summary>
            Unregister a callback for when the FileSystem is unmounted.
            </summary>
            <param name="handle">Handle returned in handle parameter in previous call to <see cref="M:DokanNet.Native.NativeMethods.DokanRegisterWaitForFileSystemClosed(DokanNet.DokanHandle,System.IntPtr@,DokanNet.Native.NativeWaitOrTimerCallback,System.IntPtr,System.UInt32)" /></param>.
            <param name="waitForCallbacks">Indicates whether to wait for callbacks to complete before returning. Normally true unless called from same thread as callback function.</param>
            <returns></returns>
        </member>
        <member name="M:DokanNet.Native.NativeMethods.DokanCloseHandle(System.IntPtr)">
            <summary>
            Unmount and wait until all resources of the \c DokanInstance are released.
            </summary>
            <param name="dokanInstance">The dokan mount context created by <see cref="M:DokanNet.Native.NativeMethods.DokanCreateFileSystem(System.Runtime.InteropServices.SafeBuffer,System.Runtime.InteropServices.SafeBuffer,DokanNet.DokanHandle@)"/>.</param>
        </member>
        <member name="M:DokanNet.Native.NativeMethods.DokanUnmount(System.Char)">
            <summary>
            Unmount a dokan device from a driver letter.
            </summary>
            <param name="driveLetter">Dokan driver letter to unmount.</param>
            <returns><c>True</c> if device was unmount or <c>false</c> in case of failure or device not found.</returns>
        </member>
        <member name="M:DokanNet.Native.NativeMethods.DokanVersion">
            <summary>
            Get the version of Dokan.
            The returned <see cref="T:System.UInt32"/> is the version number without the dots.
            </summary>
            <returns>The version of Dokan</returns>
        </member>
        <member name="M:DokanNet.Native.NativeMethods.DokanDriverVersion">
            <summary>
            Get the version of the Dokan driver.
            The returned <see cref="T:System.UInt32"/> is the version number without the dots.
            </summary>
            <returns>The version of Dokan driver.</returns>
        </member>
        <member name="M:DokanNet.Native.NativeMethods.DokanRemoveMountPoint(System.String)">
            <summary>
            Unmount a dokan device from a mount point
            </summary>
            <param name="mountPoint">MountPoint Mount point to unmount ("<c>Z</c>", 
            "<c>Z:</c>", "<c>Z:\\</c>", "<c>Z:\MyMountPoint</c>").</param>
            <returns><c>True</c> if device was unmount or <c>false</c> in case of failure or device not found.</returns>
        </member>
        <member name="M:DokanNet.Native.NativeMethods.DokanResetTimeout(System.UInt32,DokanNet.DokanFileInfo)">
            <summary>
            Extends the time out of the current IO operation in driver.
            </summary>
            <param name="timeout">Extended time in milliseconds requested.</param>
            <param name="rawFileInfo"><see cref="T:DokanNet.DokanFileInfo"/> of the operation to extend.</param>
            <returns>If the operation was successful.</returns>
        </member>
        <member name="M:DokanNet.Native.NativeMethods.DokanOpenRequestorToken(DokanNet.DokanFileInfo)">
            <summary>
            Get the handle to Access Token.
            This method needs be called in <see cref="M:DokanNet.IDokanOperations.CreateFile(System.String,DokanNet.FileAccess,System.IO.FileShare,System.IO.FileMode,System.IO.FileOptions,System.IO.FileAttributes,DokanNet.IDokanFileInfo)"/> callback.
            The caller must call <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms724211(v=vs.85).aspx">CloseHandle (MSDN)</a> for the returned handle.
            </summary>
            <param name="rawFileInfo">
            A <see cref="T:DokanNet.DokanFileInfo"/> of the operation to extend.
            </param>
            <returns>
            A handle to the account token for the user on whose behalf the code is running.
            </returns>
        </member>
        <member name="M:DokanNet.Native.NativeMethods.DokanMapKernelToUserCreateFileFlags(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32@,System.Int32@,System.Int32@)">
            <summary>
            Convert <see cref="T:DokanNet.DokanOperationProxy.ZwCreateFileDelegate"/> parameters to <see cref="M:DokanNet.IDokanOperations.CreateFile(System.String,DokanNet.FileAccess,System.IO.FileShare,System.IO.FileMode,System.IO.FileOptions,System.IO.FileAttributes,DokanNet.IDokanFileInfo)"/> parameters.
            </summary>
            <param name="desiredAccess">DesiredAccess from <see cref="T:DokanNet.DokanOperationProxy.ZwCreateFileDelegate"/>.</param>
            <param name="fileAttributes">FileAttributes from <see cref="T:DokanNet.DokanOperationProxy.ZwCreateFileDelegate"/>.</param>
            <param name="createOptions">CreateOptions from <see cref="T:DokanNet.DokanOperationProxy.ZwCreateFileDelegate"/>.</param>
            <param name="createDisposition">CreateDisposition from <see cref="T:DokanNet.DokanOperationProxy.ZwCreateFileDelegate"/>.</param>
            <param name="outDesiredAccess">New <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa363858(v=vs.85).aspx">CreateFile (MSDN)</a> dwDesiredAccess.</param>
            <param name="outFileAttributesAndFlags">New <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa363858(v=vs.85).aspx">CreateFile (MSDN)</a> dwFlagsAndAttributes.</param>
            <param name="outCreationDisposition">New <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa363858(v=vs.85).aspx">CreateFile (MSDN)</a> dwCreationDisposition.</param>
            \see <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa363858(v=vs.85).aspx">CreateFile function (MSDN)</a>
        </member>
        <member name="M:DokanNet.Native.NativeMethods.DokanNotifyCreate(DokanNet.DokanHandle,System.String,System.Boolean)">
            <summary>
            Notify Dokan that a file or directory has been created.
            </summary>
            <param name="dokanInstance">The dokan mount context created by <see cref="M:DokanNet.Native.NativeMethods.DokanCreateFileSystem(System.Runtime.InteropServices.SafeBuffer,System.Runtime.InteropServices.SafeBuffer,DokanNet.DokanHandle@)"/></param>
            <param name="filePath">Full path to the file or directory, including mount point.</param>
            <param name="isDirectory">Indicates if the path is a directory.</param>
            <returns>true if the notification succeeded.</returns>
        </member>
        <member name="M:DokanNet.Native.NativeMethods.DokanNotifyDelete(DokanNet.DokanHandle,System.String,System.Boolean)">
            <summary>
            Notify Dokan that a file or directory has been deleted.
            </summary>
            <param name="dokanInstance">The dokan mount context created by <see cref="M:DokanNet.Native.NativeMethods.DokanCreateFileSystem(System.Runtime.InteropServices.SafeBuffer,System.Runtime.InteropServices.SafeBuffer,DokanNet.DokanHandle@)"/></param>
            <param name="filePath">Full path to the file or directory, including mount point.</param>
            <param name="isDirectory">Indicates if the path is a directory.</param>
            <returns>true if notification succeeded.</returns>
        </member>
        <member name="M:DokanNet.Native.NativeMethods.DokanNotifyUpdate(DokanNet.DokanHandle,System.String)">
            <summary>
            Notify Dokan that file or directory attributes have changed.
            </summary>
            <param name="dokanInstance">The dokan mount context created by <see cref="M:DokanNet.Native.NativeMethods.DokanCreateFileSystem(System.Runtime.InteropServices.SafeBuffer,System.Runtime.InteropServices.SafeBuffer,DokanNet.DokanHandle@)"/></param>
            <param name="filePath">Full path to the file or directory, including mount point.</param>
            <returns>true if notification succeeded.</returns>
        </member>
        <member name="M:DokanNet.Native.NativeMethods.DokanNotifyXAttrUpdate(DokanNet.DokanHandle,System.String)">
            <summary>
            Notify Dokan that file or directory extended attributes have changed.
            </summary>
            <param name="dokanInstance">The dokan mount context created by <see cref="M:DokanNet.Native.NativeMethods.DokanCreateFileSystem(System.Runtime.InteropServices.SafeBuffer,System.Runtime.InteropServices.SafeBuffer,DokanNet.DokanHandle@)"/></param>
            <param name="filePath">Full path to the file or directory, including mount point.</param>
            <returns>true if notification succeeded.</returns>
        </member>
        <member name="M:DokanNet.Native.NativeMethods.DokanNotifyRename(DokanNet.DokanHandle,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Notify Dokan that a file or directory has been renamed.
            </summary>
            <remarks>This method supports in-place rename for file/directory within the same parent.</remarks>
            <param name="dokanInstance">The dokan mount context created by <see cref="M:DokanNet.Native.NativeMethods.DokanCreateFileSystem(System.Runtime.InteropServices.SafeBuffer,System.Runtime.InteropServices.SafeBuffer,DokanNet.DokanHandle@)"/></param>
            <param name="OldPath">Old path to the file or directory, including mount point.</param>
            <param name="newPath">New path to the file or directory, including mount point.</param>
            <param name="isDirectory">Indicates if the path is a directory.</param>
            <param name="isInSameDirectory">Indicates if OldPath and NewPath have the same parent.</param>
            <returns>true if notification succeeded.</returns>
        </member>
        <member name="T:DokanNet.Native.SECURITY_INFORMATION">
            <summary>
            Identifies the object-related security information being set or queried.
            This security information includes:
            <list type="bullet">
             <item>The owner of an object.</item>
             <item>The primary group of an object.</item>
             <item>The discretionary access control list(DACL) of an object.</item>
             <item>The system access control list(SACL) of an object.</item>
            </list>
            </summary>
            <remarks>Structure taken from <a href="http://www.pinvoke.net/default.aspx/Enums/SECURITY_INFORMATION.html">pinvoke.net</a> </remarks>
            \see <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa379573(v=vs.85).aspx">SECURITY_INFORMATION (MSDN)</a>
        </member>
        <member name="F:DokanNet.Native.SECURITY_INFORMATION.OWNER_SECURITY_INFORMATION">
            <summary>
            The owner identifier of the object is being referenced.
            </summary>
        </member>
        <member name="F:DokanNet.Native.SECURITY_INFORMATION.GROUP_SECURITY_INFORMATION">
            <summary>
            The primary group identifier of the object is being referenced.
            </summary>
        </member>
        <member name="F:DokanNet.Native.SECURITY_INFORMATION.DACL_SECURITY_INFORMATION">
            <summary>
            The DACL of the object is being referenced.
            </summary>
        </member>
        <member name="F:DokanNet.Native.SECURITY_INFORMATION.SACL_SECURITY_INFORMATION">
            <summary>
            The SACL of the object is being referenced.
            </summary>
        </member>
        <member name="F:DokanNet.Native.SECURITY_INFORMATION.UNPROTECTED_SACL_SECURITY_INFORMATION">
            <summary>
            The SACL inherits ACEs from the parent object.
            </summary>
            <remarks>Dokan may not be passing Label ?? 0x00000010</remarks>
        </member>
        <member name="F:DokanNet.Native.SECURITY_INFORMATION.UNPROTECTED_DACL_SECURITY_INFORMATION">
            <summary>
            The DACL inherits ACEs from the parent object.
            </summary>
        </member>
        <member name="F:DokanNet.Native.SECURITY_INFORMATION.PROTECTED_SACL_SECURITY_INFORMATION">
            <summary>
            The SACL cannot inherit ACEs.
            </summary>
        </member>
        <member name="F:DokanNet.Native.SECURITY_INFORMATION.PROTECTED_DACL_SECURITY_INFORMATION">
            <summary>
            The DACL cannot inherit access control entries (ACEs).
            </summary>
        </member>
        <member name="T:DokanNet.Native.WIN32_FIND_DATA">
            <summary>
            Contains information about the file that is found by the FindFirstFile, FindFirstFileEx, or FindNextFile function.
            </summary>
            <remarks>
            If a file has a long file name, the complete name appears in the cFileName member, and the 8.3 format truncated version
            of the name appears in the <see cref="F:DokanNet.Native.WIN32_FIND_DATA.cAlternateFileName"/>member. Otherwise,<see cref="F:DokanNet.Native.WIN32_FIND_DATA.cAlternateFileName"/> is empty. If the FindFirstFileEx function
            was called with a value of FindExInfoBasic in the fInfoLevelId parameter, the <see cref="F:DokanNet.Native.WIN32_FIND_DATA.cAlternateFileName"/> member will always contain
            a NULL string value. This remains true for all subsequent calls to the FindNextFile function. As an alternative method of
            retrieving the 8.3 format version of a file name, you can use the GetShortPathName function. For more information about
            file names, see <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa365247(v=vs.85).aspx">Naming Files, Paths, and Namespaces (MSDN)</a>.
            
            Not all file systems can record creation and last access times, and not all file systems record them in the same manner.
            For example, on the FAT file system, create time has a resolution of 10 milliseconds, write time has a resolution of
            2 seconds, and access time has a resolution of 1 day. The NTFS file system delays updates to the last access time for
            a file by up to 1 hour after the last access.For more information, see <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms724290(v=vs.85).aspx">File Times (MSDN)</a>.
            </remarks>
            \see <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa365740%28v=vs.85%29.aspx?f=255&amp;MSPPError=-2147217396">WIN32_FIND_DATA structure (MSDN)</a>
        </member>
        <member name="F:DokanNet.Native.WIN32_FIND_DATA.dwFileAttributes">
            <summary>
            The file attributes of a file.
            
            For possible values and their descriptions, see <see cref="T:System.IO.FileAttributes"/>.
            The <see cref="F:System.IO.FileAttributes.SparseFile"/> attribute on the file is set if any of 
            the streams of the file have ever been sparse.
            </summary>
        </member>
        <member name="F:DokanNet.Native.WIN32_FIND_DATA.ftCreationTime">
            <summary>
            A <see cref="T:System.Runtime.InteropServices.ComTypes.FILETIME"/> structure that specifies when a file or directory was created.
            If the underlying file system does not support creation time, this member is zero.
            </summary>
        </member>
        <member name="F:DokanNet.Native.WIN32_FIND_DATA.ftLastAccessTime">
            <summary>
            A <see cref="T:System.Runtime.InteropServices.ComTypes.FILETIME"/> structure.
            
            For a file, the structure specifies when the file was last read from, written to, or for executable files, run.
            
            For a directory, the structure specifies when the directory is created.
            If the underlying file system does not support last access time, this member is zero.
            
            On the FAT file system, the specified date for both files and directories is correct, 
            but the time of day is always set to midnight.
            </summary>
        </member>
        <member name="F:DokanNet.Native.WIN32_FIND_DATA.ftLastWriteTime">
            <summary>
            A <see cref="T:System.Runtime.InteropServices.ComTypes.FILETIME"/> structure.
            
            For a file, the structure specifies when the file was last written to, 
            truncated, or overwritten, for example, when WriteFile or SetEndOfFile 
            are used. The date and time are not updated when file attributes or 
            security descriptors are changed.
            
            For a directory, the structure specifies when the directory is created.
            If the underlying file system does not support last write time, 
            this member is zero.
            </summary>
        </member>
        <member name="F:DokanNet.Native.WIN32_FIND_DATA.nFileSizeHigh">
            <summary>
            The high-order DWORD value of the file size, in bytes.
            
            This value is zero unless the file size is greater than MAXDWORD.
            
            The size of the file is equal to (nFileSizeHigh* (MAXDWORD+1)) + nFileSizeLow.
            </summary>
        </member>
        <member name="F:DokanNet.Native.WIN32_FIND_DATA.nFileSizeLow">
            <summary>
            The low-order DWORD value of the file size, in bytes.
            </summary>
        </member>
        <member name="F:DokanNet.Native.WIN32_FIND_DATA.dwReserved0">
            <summary>
            If the <see cref="F:DokanNet.Native.WIN32_FIND_DATA.dwFileAttributes"/> member includes the <see cref="F:System.IO.FileAttributes.ReparsePoint"/> attribute, 
            this member specifies the reparse point tag. 
            Otherwise, this value is undefined and should not be used.
            </summary>
            \see <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa365511(v=vs.85).aspx">Reparse Point Tags (MSDN)</a>
        </member>
        <member name="F:DokanNet.Native.WIN32_FIND_DATA.dwReserved1">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="F:DokanNet.Native.WIN32_FIND_DATA.cFileName">
            <summary>
            The name of the file.
            </summary>
        </member>
        <member name="F:DokanNet.Native.WIN32_FIND_DATA.cAlternateFileName">
            <summary>
            An alternative name for the file.
            This name is in the classic 8.3 file name format.
            </summary>
        </member>
        <member name="T:DokanNet.Native.WIN32_FIND_STREAM_DATA">
            <summary>
            Contains information about the stream found by the <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa364424(v=vs.85).aspx">FindFirstStreamW (MSDN)</a> 
            or <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa364430(v=vs.85).aspx">FindNextStreamW (MSDN)</a> function.
            </summary>
            \see <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa365741(v=vs.85).aspx">WIN32_FIND_STREAM_DATA structure (MSDN)</a>
        </member>
        <member name="F:DokanNet.Native.WIN32_FIND_STREAM_DATA.StreamSize">
            <summary>
            A <c>long</c> value that specifies the size of the stream, in bytes.
            </summary>
        </member>
        <member name="F:DokanNet.Native.WIN32_FIND_STREAM_DATA.cStreamName">
            <summary>
            The name of the stream. The string name format is "<c>:streamname:$streamtype</c>".
            </summary>
        </member>
        <member name="T:DokanNet.NtStatus">
            <summary>
            NT status values.
            </summary>
            \see <a href="https://msdn.microsoft.com/en-us/library/cc704588.aspx">NTSTATUS Values (MSDN)</a>
        </member>
        <member name="F:DokanNet.NtStatus.Success">
            <summary>
            Success - The operation completed successfully.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.Wait1">
            <summary>
            Success - The caller specified WaitAny for WaitType and one of the dispatcher objects in 
            the Object array has been set to the signaled state.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.Wait2">
            <summary>
            Success - The caller specified WaitAny for WaitType and one of the dispatcher objects in 
            the Object array has been set to the signaled state.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.Wait3">
            <summary>
            Success - The caller specified WaitAny for WaitType and one of the dispatcher objects in 
            the Object array has been set to the signaled state.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.Wait63">
            <summary>
            Success - The caller specified WaitAny for WaitType and one of the dispatcher objects in 
            the Object array has been set to the signaled state.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.Abandoned">
            <summary>
            Success - The caller attempted to wait for a mutex that has been abandoned.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.AbandonedWait0">
            <summary>
            Success - The caller attempted to wait for a mutex that has been abandoned.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.AbandonedWait1">
            <summary>
            Success - The caller attempted to wait for a mutex that has been abandoned.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.AbandonedWait2">
            <summary>
            Success - The caller attempted to wait for a mutex that has been abandoned.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.AbandonedWait3">
            <summary>
            Success - The caller attempted to wait for a mutex that has been abandoned.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.AbandonedWait63">
            <summary>
            Success - The caller attempted to wait for a mutex that has been abandoned.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.UserApc">
            <summary>
            Success - A user-mode APC was delivered before the given Interval expired.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.KernelApc">
            <summary>
            Success - ?
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.Alerted">
            <summary>
            Success - The delay completed because the thread was alerted.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.Timeout">
            <summary>
            Success - The given Timeout interval expired.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.Pending">
            <summary>
            Success - The operation that was requested is pending completion.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.Reparse">
            <summary>
            Success - A reparse should be performed by the Object Manager
            because the name of the file resulted in a symbolic link.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.MoreEntries">
            <summary>
            Success - Returned by enumeration APIs to indicate more information
            is available to successive calls.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.NotAllAssigned">
            <summary>
            Success - Indicates not all privileges or groups that are referenced
            are assigned to the caller. This allows, for example, all privileges
            to be disabled without having to know exactly which privileges are
            assigned.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.SomeNotMapped">
            <summary>
            Success - Some of the information to be translated has not been translated.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.OpLockBreakInProgress">
            <summary>
            Success - An open/create operation completed while an opportunistic
            lock (<c>oplock</c>) break is underway.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.VolumeMounted">
            <summary>
            Success - A new volume has been mounted by a file system.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.RxActCommitted">
            <summary>
            Success - This success level status indicates that the transaction
            state already exists for the registry sub-tree but that a transaction
            commit was previously aborted. The commit has now been completed.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.NotifyCleanup">
            <summary>
            Success - Indicates that a notify change request has been completed
            due to closing the handle that made the notify change request.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.NotifyEnumDir">
            <summary>
            Success - Indicates that a notify change request is being completed
            and that the information is not being returned in the caller's
            buffer. The caller now needs to enumerate the files to find the
            changes.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.NoQuotasForAccount">
            <summary>
            Success - {No Quotas} No system quota limits are specifically set for this account.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.PrimaryTransportConnectFailed">
            <summary>
            Success - {Connect Failure on Primary Transport} An attempt was made
            to connect to the remote server on the primary transport, but
            the connection failed. The computer WAS able to connect on a
            secondary transport.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.PageFaultTransition">
            <summary>
            Success - The page fault was a transition fault.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.PageFaultDemandZero">
            <summary>
            Success - The page fault was a demand zero fault.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.PageFaultCopyOnWrite">
            <summary>
            Success - The page fault was a demand zero fault.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.PageFaultGuardPage">
            <summary>
            Success - The page fault was a demand zero fault.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.PageFaultPagingFile">
            <summary>
            Success - The page fault was satisfied by reading from a secondary
            storage device.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.CrashDump">
            <summary>
            Success - The crash dump exists in a paging file.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.ReparseObject">
            <summary>
            Success - A reparse should be performed by the Object Manager
            because the name of the file resulted in a symbolic link.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.NothingToTerminate">
            <summary>
            Success - A process being terminated has no threads to terminate.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.ProcessNotInJob">
            <summary>
            Success - The specified process is not part of a job.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.ProcessInJob">
            <summary>
            Success - The specified process is part of a job.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.ProcessCloned">
            <summary>
            Success - The current process is a cloned process.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.FileLockedWithOnlyReaders">
            <summary>
            Success - The file was locked and all users of the file can only read.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.FileLockedWithWriters">
            <summary>
            Success - The file was locked and at least one user of the file can write.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.Informational">
            <summary>
            Informational - General information
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.ObjectNameExists">
            <summary>
            Informational - {Object Exists} An attempt was made to create an object but 
            the object name already exists.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.ThreadWasSuspended">
            <summary>
            Informational - {Thread Suspended} A thread termination occurred while 
            the thread was suspended. The thread resumed, and termination proceeded.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.WorkingSetLimitRange">
            <summary>
            Informational - {Working Set Range Error} An attempt was made to set the working set 
            minimum or maximum to values that are outside the allowable range.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.ImageNotAtBase">
            <summary>
            Informational - {Image Relocated} An image file could not be mapped at the address 
            that is specified in the image file. Local fixes must be performed on this image.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.RegistryRecovered">
            <summary>
            Informational - {Registry Recovery} One of the files that contains the system 
            registry data had to be recovered by using a log or alternate copy. 
            The recovery was successful.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.RecoveryNotNeeded">
            <summary>
            Informational - Transaction - The transactional resource manager is already consistent.
            Recovery is not needed.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.RmAlreadyStarted">
            <summary>
            Informational - Transaction - The transactional resource manager has
            already been started.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.Warning">
            <summary>
            Warning - General warning
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.GuardPageViolation">
            <summary>
            Warning - {EXCEPTION} Guard Page Exception A page of memory that marks 
            the end of a data structure, such as a stack or an array, 
            has been accessed.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.DatatypeMisalignment">
            <summary>
            Warning - {EXCEPTION} Alignment Fault A data type misalignment was detected 
            in a load or store instruction.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.Breakpoint">
            <summary>
            Warning - {EXCEPTION} Breakpoint A breakpoint has been reached.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.SingleStep">
            <summary>
            Warning - {EXCEPTION} Single Step A single step or trace operation has just been completed.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.BufferOverflow">
            <summary>
            Warning - {Buffer Overflow} The data was too large to fit into the specified buffer.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.NoMoreFiles">
            <summary>
            Warning - {No More Files} No more files were found which match the file specification.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.HandlesClosed">
            <summary>
            Warning - {Handles Closed} Handles to objects have been automatically closed 
            because of the requested operation.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.PartialCopy">
            <summary>
            Warning - Because of protection conflicts, not all the requested bytes could be copied.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.DeviceBusy">
            <summary>
            Warning - {Device Busy} The device is currently busy.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InvalidEaName">
            <summary>
            Warning - {Illegal EA} The specified extended attribute (EA) name
            contains at least one illegal character.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.EaListInconsistent">
            <summary>
            Warning - {Inconsistent EA List} The extended attribute (EA) list is
            inconsistent.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.NoMoreEntries">
            <summary>
            Warning - {No More Entries} No more entries are available from an
            enumeration operation.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.LongJump">
            <summary>
            Warning - A long jump has been executed.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.DllMightBeInsecure">
            <summary>
            Warning - The application is attempting to run executable code. 
            This may be insecure. 
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.LogCorruptionDetected">
            <summary>
            Warning - Transaction - There is no transaction metadata on the file.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.CantRecoverWithHandleOpen">
            <summary>
            Warning - Transaction - The file cannot be recovered because there
            is a handle still open on it.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.TxfMetadataAlreadyPresent">
            <summary>
            Warning - Transaction - Transaction metadata is already present on
            this file and cannot be superseded.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.TransactionScopeCallbacksNotSet">
            <summary>
            Warning - Transaction - A transaction scope could not be entered
            because the scope handler has not been initialized.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.Error">
            <summary>
            Error - General error
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.Unsuccessful">
            <summary>
            Error - {Operation Failed} The requested operation was unsuccessful.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.NotImplemented">
            <summary>
            Error - {Not Implemented} The requested operation is not implemented.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InvalidInfoClass">
            <summary>
            Error - {Invalid Parameter} The specified information class is not a 
            valid information class for the specified object.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InfoLengthMismatch">
            <summary>
            Error - The specified information record length does not match the
            length that is required for the specified information class.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.AccessViolation">
            <summary>
            Error - The instruction referenced memory it do not have access to.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InPageError">
            <summary>
            Error - The required data was not placed into memory because of an
            I/O error status.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.PagefileQuota">
            <summary>
            Error - The page file quota for the process has been exhausted.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InvalidHandle">
            <summary>
            Error - An invalid HANDLE was specified.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.BadInitialStack">
            <summary>
            Error - An invalid initial stack was specified in a call to
            <c>NtCreateThread</c>.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.BadInitialPc">
            <summary>
            Error - An invalid initial start address was specified in a call to
            <c>NtCreateThread</c>.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InvalidCid">
            <summary>
            Error - An invalid client ID was specified.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.TimerNotCanceled">
            <summary>
            Error - An attempt was made to cancel or set a timer that has an
            associated APC and the specified thread is not the thread that
            originally set the timer with an associated APC routine.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InvalidParameter">
            <summary>
            Error - An invalid parameter was passed to a service or function.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.NoSuchDevice">
            <summary>
            Error - A device that does not exist was specified.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.NoSuchFile">
            <summary>
            Error - {File Not Found} The file does not exist.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InvalidDeviceRequest">
            <summary>
            Error - The specified request is not a valid operation for the
            target device.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.EndOfFile">
            <summary>
            Error - The end-of-file marker has been reached. There is no valid
            data in the file beyond this marker.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.WrongVolume">
            <summary>
            Error - {Wrong Volume} The wrong volume is in the drive. Insert
            volume into drive.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.NoMediaInDevice">
            <summary>
            Error - {No Disk} There is no disk in the drive. Insert a disk into
            drive.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.NoMemory">
            <summary>
            Error - {Not Enough Quota} Not enough virtual memory or paging file
            quota is available to complete the specified operation.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.NotMappedView">
            <summary>
            Error - The address range to un-map is not a mapped view.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.UnableToFreeVm">
            <summary>
            Error - The virtual memory cannot be freed.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.UnableToDeleteSection">
            <summary>
            Error - The specified section cannot be deleted.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.IllegalInstruction">
            <summary>
            Error - {EXCEPTION} Illegal Instruction. An attempt was made to
            execute an illegal instruction.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.AlreadyCommitted">
            <summary>
            Error - {Already Committed} The specified address range is already
            committed.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.AccessDenied">
            <summary>
            Error - {Access Denied} A process has requested access to an object
            but has not been granted those access rights.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.BufferTooSmall">
            <summary>
            Error - {Buffer Too Small} The buffer is too small to contain the
            entry. No information has been written to the buffer.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.ObjectTypeMismatch">
            <summary>
            Error - {Wrong Type} There is a mismatch between the type of object
            that is required by the requested operation and the type of object
            that is specified in the request.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.NonContinuableException">
            <summary>
            Error - {EXCEPTION} Cannot Continue. Windows cannot continue from
            this exception.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.BadStack">
            <summary>
            Error - An invalid or unaligned stack was encountered during an
            unwind operation.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.NotLocked">
            <summary>
            Error - An attempt was made to unlock a page of memory that was not
            locked.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.NotCommitted">
            <summary>
            Error - An attempt was made to change the attributes on memory that
            has not been committed.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InvalidParameterMix">
            <summary>
            Error - An invalid combination of parameters was specified.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.ObjectNameInvalid">
            <summary>
            Error - The object name is invalid.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.ObjectNameNotFound">
            <summary>
            Error - The object name is not found.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.ObjectNameCollision">
            <summary>
            Error - The object name already exists.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.ObjectPathInvalid">
            <summary>
            Error - The object path component was not a directory object.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.ObjectPathNotFound">
            <summary>
            Error - {Path Not Found} The path does not exist.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.ObjectPathSyntaxBad">
            <summary>
            Error - The object path component was not a directory object.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.DataOverrun">
            <summary>
            Error - {Data Overrun} A data overrun error occurred.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.DataLate">
            <summary>
            Error - {Data Late} A data late error occurred.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.DataError">
            <summary>
            Error - {Data Error} An error occurred in reading or writing data.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.CrcError">
            <summary>
            Error - {Bad CRC} A cyclic redundancy check (CRC) checksum error
            occurred.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.SectionTooBig">
            <summary>
            Error - {Section Too Large} The specified section is too big to map
            the file.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.PortConnectionRefused">
            <summary>
            Error - The <c>NtConnectPort</c> request is refused.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InvalidPortHandle">
            <summary>
            Error - The type of port handle is invalid for the operation that is
            requested.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.SharingViolation">
            <summary>
            Error - A file cannot be opened because the share access flags are
            incompatible.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.QuotaExceeded">
            <summary>
            Error - Insufficient quota exists to complete the operation.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InvalidPageProtection">
            <summary>
            Error - The specified page protection was not valid.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.MutantNotOwned">
            <summary>
            Error - An attempt to release a mutant object was made by a thread
            that was not the owner of the mutant object.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.SemaphoreLimitExceeded">
            <summary>
            Error - An attempt was made to release a semaphore such that its
            maximum count would have been exceeded.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.PortAlreadySet">
            <summary>
            Error - An attempt was made to set the DebugPort or ExceptionPort of
            a process, but a port already exists in the process, or an attempt
            was made to set the CompletionPort of a file but a port was already
            set in the file, or an attempt was made to set the associated
            completion port of an ALPC port but it is already set.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.SectionNotImage">
            <summary>
            Error - An attempt was made to query image information on a section
            that does not map an image.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.SuspendCountExceeded">
            <summary>
            Error - An attempt was made to suspend a thread whose suspend count
            was at its maximum.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.ThreadIsTerminating">
            <summary>
            Error - An attempt was made to suspend a thread that has begun
            termination.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.BadWorkingSetLimit">
            <summary>
            Error - An attempt was made to set the working set limit to an
            invalid value (for example, the minimum greater than maximum).
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.IncompatibleFileMap">
            <summary>
            Error - A section was created to map a file that is not compatible
            with an already existing section that maps the same file.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.SectionProtection">
            <summary>
            Error - A view to a section specifies a protection that is
            incompatible with the protection of the initial view.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.EasNotSupported">
            <summary>
            Error - An operation involving EAs failed because the file system
            does not support EAs.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.EaTooLarge">
            <summary>
            Error - An EA operation failed because the EA set is too large.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.NonExistentEaEntry">
            <summary>
            Error - An EA operation failed because the name or EA index is
            invalid.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.NoEasOnFile">
            <summary>
            Error - The file for which EAs were requested has no EAs.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.EaCorruptError">
            <summary>
            Error - The EA is corrupt and cannot be read.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.FileLockConflict">
            <summary>
            Error - A requested read/write cannot be granted due to a
            conflicting file lock.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.LockNotGranted">
            <summary>
            Error - A requested file lock cannot be granted due to other
            existing locks.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.DeletePending">
            <summary>
            Error - A non-close operation has been requested of a file object
            that has a delete pending.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.CtlFileNotSupported">
            <summary>
            Error - An attempt was made to set the control attribute on a file.
            This attribute is not supported in the destination file system.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.UnknownRevision">
            <summary>
            Error - Indicates a revision number that was encountered or
            specified is not one that is known by the service. It might be a
            more recent revision than the service is aware of.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.RevisionMismatch">
            <summary>
            Error - Indicates that two revision levels are incompatible.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InvalidOwner">
            <summary>
            Error - Indicates a particular security ID cannot be assigned as
            the owner of an object.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InvalidPrimaryGroup">
            <summary>
            Error - Indicates a particular security ID cannot be assigned as the
            primary group of an object.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.NoImpersonationToken">
            <summary>
            Error - An attempt has been made to operate on an impersonation
            token by a thread that is not currently impersonating a client.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.CantDisableMandatory">
            <summary>
            Error - A mandatory group cannot be disabled.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.NoLogonServers">
            <summary>
            Error - No logon servers are currently available to service the
            logon request.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.NoSuchLogonSession">
            <summary>
            Error - A specified logon session does not exist. It might already
            have been terminated.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.NoSuchPrivilege">
            <summary>
            Error - A specified privilege does not exist.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.PrivilegeNotHeld">
            <summary>
            Error - A required privilege is not held by the client.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InvalidAccountName">
            <summary>
            Error - The name provided is not a properly formed account name.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.UserExists">
            <summary>
            Error - The specified account already exists.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.NoSuchUser">
            <summary>
            Error - The specified account does not exist.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.GroupExists">
            <summary>
            Error - The specified group already exists.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.NoSuchGroup">
            <summary>
            Error - The specified group does not exist.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.MemberInGroup">
            <summary>
            Error - The specified user account is already in the specified group
            account. Also used to indicate a group cannot be deleted because it
            contains a member.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.MemberNotInGroup">
            <summary>
            Error - The specified user account is not a member of the specified
            group account.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.LastAdmin">
            <summary>
            Error - Indicates the requested operation would disable or delete
            the last remaining administration account. This is not allowed to
            prevent creating a situation in which the system cannot be
            administrated.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.WrongPassword">
            <summary>
            Error - When trying to update a password, this return status
            indicates that the value provided as the current password is not
            correct.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.IllFormedPassword">
            <summary>
            Error - When trying to update a password, this return status
            indicates that the value provided for the new password contains
            values that are not allowed in passwords.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.PasswordRestriction">
            <summary>
            Error - When trying to update a password, this status indicates that
            some password update rule has been violated. For example, the
            password might not meet length criteria.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.LogonFailure">
            <summary>
            Error - The attempted logon is invalid. This is either due to a bad
            username or authentication information.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.AccountRestriction">
            <summary>
            Error - Indicates a referenced user name and authentication
            information are valid, but some user account restriction has
            prevented successful authentication (such as time-of-day
            restrictions).
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InvalidLogonHours">
            <summary>
            Error - The user account has time restrictions and cannot be logged
            onto at this time.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InvalidWorkstation">
            <summary>
            Error - The user account is restricted so that it cannot be used to
            log on from the source workstation.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.PasswordExpired">
            <summary>
            Error - The user account password has expired.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.AccountDisabled">
            <summary>
            Error - The referenced account is currently disabled and cannot be
            logged on to.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.NoneMapped">
            <summary>
            Error - None of the information to be translated has been
            translated.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.TooManyLuidsRequested">
            <summary>
            Error - The number of LUIDs requested cannot be allocated with a
            single allocation.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.LuidsExhausted">
            <summary>
            Error - Indicates there are no more LUIDs to allocate.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InvalidSubAuthority">
            <summary>
            Error - Indicates the sub-authority value is invalid for the
            particular use.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InvalidAcl">
            <summary>
            Error - Indicates the ACL structure is not valid.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InvalidSid">
            <summary>
            Error - Indicates the SID structure is not valid.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InvalidSecurityDescr">
            <summary>
            Error - Indicates the <c>SECURITY_DESCRIPTOR</c> structure is not valid.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.ProcedureNotFound">
            <summary>
            Error - Indicates the specified procedure address cannot be found in
            the DLL.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InvalidImageFormat">
            <summary>
            Error - {Bad Image} Image is either not designed to run on Windows or
            it contains an error. Try installing the program again using the
            original installation media or contact your system administrator or
            the software vendor for support.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.NoToken">
            <summary>
            Error - An attempt was made to reference a token that does not
            exist. This is typically done by referencing the token that is
            associated with a thread when the thread is not impersonating a
            client.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.BadInheritanceAcl">
            <summary>
            Error - Indicates that an attempt to build either an inherited ACL
            or ACE was not successful. This can be caused by a number of things.
            One of the more probable causes is the replacement of a CreatorId
            with a SID that did not fit into the ACE or ACL.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.RangeNotLocked">
            <summary>
            Error - The range specified in <c>NtUnlockFile</c> was not locked.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.DiskFull">
            <summary>
            Error - An operation failed because the disk was full.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.ServerDisabled">
            <summary>
            Error - The GUID allocation server is disabled at the moment.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.ServerNotDisabled">
            <summary>
            Error - The GUID allocation server is enabled at the moment.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.TooManyGuidsRequested">
            <summary>
            Error - Too many GUIDs were requested from the allocation server at
            once.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.GuidsExhausted">
            <summary>
            Error - The GUIDs could not be allocated because the Authority Agent
            was exhausted.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InvalidIdAuthority">
            <summary>
            Error - The value provided was an invalid value for an identifier
            authority.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.AgentsExhausted">
            <summary>
            Error - No more authority agent values are available for the
            particular identifier authority value.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InvalidVolumeLabel">
            <summary>
            Error - An invalid volume label has been specified.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.SectionNotExtended">
            <summary>
            Error - A mapped section could not be extended.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.NotMappedData">
            <summary>
            Error - Specified section to flush does not map a data file.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.ResourceDataNotFound">
            <summary>
            Error - Indicates the specified image file did not contain a
            resource section.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.ResourceTypeNotFound">
            <summary>
            Error - Indicates the specified resource type cannot be found in the
            image file.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.ResourceNameNotFound">
            <summary>
            Error - Indicates the specified resource name cannot be found in the
            image file.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.ArrayBoundsExceeded">
            <summary>
            Error - {EXCEPTION} Array bounds exceeded.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.FloatDenormalOperand">
            <summary>
            Error - {EXCEPTION} Floating-point denormal operand.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.FloatDivideByZero">
            <summary>
            Error - {EXCEPTION} Floating-point division by zero.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.FloatInexactResult">
            <summary>
            Error - {EXCEPTION} Floating-point inexact result.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.FloatInvalidOperation">
            <summary>
            Error - {EXCEPTION} Floating-point invalid operation.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.FloatOverflow">
            <summary>
            Error - {EXCEPTION} Floating-point overflow.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.FloatStackCheck">
            <summary>
            Error - {EXCEPTION} Floating-point stack check.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.FloatUnderflow">
            <summary>
            Error - {EXCEPTION} Floating-point underflow.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.IntegerDivideByZero">
            <summary>
            Error - {EXCEPTION} Integer division by zero.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.IntegerOverflow">
            <summary>
            Error - {EXCEPTION} Integer overflow.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.PrivilegedInstruction">
            <summary>
            Error - {EXCEPTION} Privileged instruction.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.TooManyPagingFiles">
            <summary>
            Error - An attempt was made to install more paging files than the
            system supports.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.FileInvalid">
            <summary>
            Error - The volume for a file has been externally altered such that
            the opened file is no longer valid.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InstanceNotAvailable">
            <summary>
            Error - The maximum named pipe instance count has been reached.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.PipeNotAvailable">
            <summary>
            Error - An instance of a named pipe cannot be found in the listening
            state.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InvalidPipeState">
            <summary>
            Error - The named pipe is not in the connected or closing state.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.PipeBusy">
            <summary>
            Error - The specified pipe is set to complete operations and there
            are current I/O operations queued so that it cannot be changed to
            queue operations.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.IllegalFunction">
            <summary>
            Error - The specified handle is not open to the server end of the
            named pipe.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.PipeDisconnected">
            <summary>
            Error - The specified named pipe is in the disconnected state.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.PipeClosing">
            <summary>
            Error - The specified named pipe is in the closing state.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.PipeConnected">
            <summary>
            Error - The specified named pipe is in the connected state.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.PipeListening">
            <summary>
            Error - The specified named pipe is in the listening state.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InvalidReadMode">
            <summary>
            Error - The specified named pipe is not in message mode.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.IoTimeout">
            <summary>
            Error - {Device Timeout} The specified I/O operation was not
            completed before the time-out period expired.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.FileForcedClosed">
            <summary>
            Error - The specified file has been closed by another process.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.ProfilingNotStarted">
            <summary>
            Error - Profiling is not started.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.ProfilingNotStopped">
            <summary>
            Error - Profiling is not stopped.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.NotSameDevice">
            <summary>
            Error - {Incorrect Volume} The destination file of a rename request
            is located on a different device than the source of the rename
            request.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.FileRenamed">
            <summary>
            Error - The specified file has been renamed and thus cannot be
            modified.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.CantWait">
            <summary>
            Error - Used to indicate that an operation cannot continue without
            blocking for I/O.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.PipeEmpty">
            <summary>
            Error - Used to indicate that a read operation was done on an empty
            pipe.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.CantTerminateSelf">
            <summary>
            Error - Indicates that a thread attempted to terminate itself by
            default (called <c>NtTerminateThread</c> with <c>NULL</c>) and it was the last
            thread in the current process.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InternalError">
            <summary>
            Error - An internal error occurred.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InvalidParameter1">
            <summary>
            Error - An invalid parameter was passed to a service or function as
            the first argument.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InvalidParameter2">
            <summary>
            Error - An invalid parameter was passed to a service or function as
            the second argument.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InvalidParameter3">
            <summary>
            Error - An invalid parameter was passed to a service or function as
            the third argument.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InvalidParameter4">
            <summary>
            Error - An invalid parameter was passed to a service or function as
            the fourth argument.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InvalidParameter5">
            <summary>
            Error - An invalid parameter was passed to a service or function as
            the fifth argument.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InvalidParameter6">
            <summary>
            Error - An invalid parameter was passed to a service or function as
            the sixth argument.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InvalidParameter7">
            <summary>
            Error - An invalid parameter was passed to a service or function as
            the seventh argument.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InvalidParameter8">
            <summary>
            Error - An invalid parameter was passed to a service or function as
            the eighth argument.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InvalidParameter9">
            <summary>
            Error - An invalid parameter was passed to a service or function as
            the ninth argument.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InvalidParameter10">
            <summary>
            Error - An invalid parameter was passed to a service or function as
            the tenth argument.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InvalidParameter11">
            <summary>
            Error - An invalid parameter was passed to a service or function as
            the eleventh argument.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InvalidParameter12">
            <summary>
            Error - An invalid parameter was passed to a service or function as
            the twelfth argument.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.DirectoryNotEmpty">
            <summary>
            Error - Indicates that the directory trying to be deleted is not empty.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.NotADirectory">
            <summary>
            Error - A requested opened file is not a directory.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.MappedFileSizeZero">
            <summary>
            Error - An attempt was made to map a file of size zero with the
            maximum size specified as zero.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.TooManyOpenedFiles">
            <summary>
            Error - Too many files are opened on a remote server. This error
            should only be returned by the Windows redirector on a remote drive.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.Cancelled">
            <summary>
            Error - The I/O request was canceled.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.CannotDelete">
            <summary>
            Error - An attempt has been made to remove a file or directory that
            cannot be deleted.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InvalidComputerName">
            <summary>
            Error - Indicates a name that was specified as a remote computer
            name is syntactically invalid.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.FileDeleted">
            <summary>
            Error - An I/O request other than <c>close</c> was performed on a file
            after it was deleted, which can only happen to a request that did
            not complete before the last handle was closed via <c>NtClose</c>.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.SpecialAccount">
            <summary>
            Error - Indicates an operation that is incompatible with built-in
            accounts has been attempted on a built-in (special) SAM account. For
            example, built-in accounts cannot be deleted.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.SpecialGroup">
            <summary>
            Error - The operation requested cannot be performed on the specified
            group because it is a built-in special group.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.SpecialUser">
            <summary>
            Error - The operation requested cannot be performed on the specified
            user because it is a built-in special user.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.MembersPrimaryGroup">
            <summary>
            Error - Indicates a member cannot be removed from a group because
            the group is currently the member's primary group.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.FileClosed">
            <summary>
            Error - An I/O request other than <c>close</c> and several other special
            case operations was attempted using a file object that had already
            been closed.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.TooManyThreads">
            <summary>
            Error - Indicates a process has too many threads to perform the
            requested action. For example, assignment of a primary token can be
            performed only when a process has zero or one threads.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.ThreadNotInProcess">
            <summary>
            Error - An attempt was made to operate on a thread within a specific
            process, but the specified thread is not in the specified process.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.TokenAlreadyInUse">
            <summary>
            Error - An attempt was made to establish a token for use as a
            primary token but the token is already in use. A token can only be
            the primary token of one process at a time.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.PagefileQuotaExceeded">
            <summary>
            Error - The page file quota was exceeded.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.CommitmentLimit">
            <summary>
            Error - {Out of Virtual Memory} Your system is low on virtual
            memory. To ensure that Windows runs correctly, increase the size of
            your virtual memory paging file.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InvalidImageLeFormat">
            <summary>
            Error - The specified image file did not have the correct format: it
            appears to be LE format.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InvalidImageNotMz">
            <summary>
            Error - The specified image file did not have the correct format: it
            did not have an initial MZ.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InvalidImageProtect">
            <summary>
            Error - The specified image file did not have the correct format: it
            did not have a proper <c>e_lfarlc</c> in the MZ header.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InvalidImageWin16">
            <summary>
            Error - The specified image file did not have the correct format: it
            appears to be a 16-bit Windows image.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.LogonServer">
            <summary>
            Error - The <c>Netlogon</c> service cannot start because another <c>Netlogon</c>
            service running in the domain conflicts with the specified role.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.DifferenceAtDc">
            <summary>
            Error - The time at the primary domain controller is different from
            the time at the backup domain controller or member server by too
            large an amount.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.SynchronizationRequired">
            <summary>
            Error - The SAM database on a Windows Server operating system is
            significantly out of synchronization with the copy on the domain
            controller. A complete synchronization is required.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.DllNotFound">
            <summary>
            Error - {Unable To Locate Component} This application has failed to
            start because DLL was not found. Reinstalling the application might
            fix this problem.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.IoPrivilegeFailed">
            <summary>
            Error - {Privilege Failed} The I/O permissions for the process could
            not be changed.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.OrdinalNotFound">
            <summary>
            Error - {Ordinal Not Found} The ordinal could not be located in the
            dynamic link library.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.EntryPointNotFound">
            <summary>
            Error - {Entry Point Not Found} The procedure entry point could
            not be located in the dynamic link library.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.ControlCExit">
            <summary>
            Error - {Application Exit by CTRL+C} The application terminated as a
            result of a CTRL+C.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.PortNotSet">
            <summary>
            Error - An attempt to remove a processes DebugPort was made, but a
            port was not already associated with the process.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.DebuggerInactive">
            <summary>
            Error - An attempt to do an operation on a debug port failed because
            the port is in the process of being deleted.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.CallbackBypass">
            <summary>
            Error - A callback has requested to bypass native code.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.PortClosed">
            <summary>
            Error - The ALPC port is closed.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.MessageLost">
            <summary>
            Error - The ALPC message requested is no longer available.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InvalidMessage">
            <summary>
            Error - The ALPC message supplied is invalid.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.RequestCanceled">
            <summary>
            Error - The ALPC message has been canceled.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.RecursiveDispatch">
            <summary>
            Error - Invalid recursive dispatch attempt.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.LpcReceiveBufferExpected">
            <summary>
            Error - No receive buffer has been supplied in a synchronous
            request.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.LpcInvalidConnectionUsage">
            <summary>
            Error - The connection port is used in an invalid context.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.LpcRequestsNotAllowed">
            <summary>
            Error - The ALPC port does not accept new request messages.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.ResourceInUse">
            <summary>
            Error - The resource requested is already in use.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.ProcessIsProtected">
            <summary>
            Error - Either the target process, or the target thread's containing
            process, is a protected process.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.VolumeDirty">
            <summary>
            Error - The operation could not be completed because the volume is
            dirty. Please run the Chkdsk utility and try again.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.FileCheckedOut">
            <summary>
            Error - This file is checked out or locked for editing by another
            user.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.CheckOutRequired">
            <summary>
            Error - The file must be checked out before saving changes.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.BadFileType">
            <summary>
            Error - The file type being saved or retrieved has been blocked.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.FileTooLarge">
            <summary>
            Error - The file size exceeds the limit allowed and cannot be saved.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.FormsAuthRequired">
            <summary>
            Error - Access Denied. Before opening files in this location, you
            must first browse to the e.g. site and select the option to log on
            automatically.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.VirusInfected">
            <summary>
            Error - The operation did not complete successfully because the file
            contains a virus.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.VirusDeleted">
            <summary>
            Error - This file contains a virus and cannot be opened. Due to the
            nature of this virus, the file has been removed from this location.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.TransactionalConflict">
            <summary>
            Error - Transaction - The function attempted to use a name that is
            reserved for use by another transaction.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.InvalidTransaction">
            <summary>
            Error - Transaction - The transaction handle associated with this
            operation is invalid.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.TransactionNotActive">
            <summary>
            Error - Transaction - The requested operation was made in the
            context of a transaction that is no longer active.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.TmInitializationFailed">
            <summary>
            Error - Transaction - The transaction manager was unable to be
            successfully initialized. Transacted operations are not supported.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.RmNotActive">
            <summary>
            Error - Transaction - Transaction support within the specified file
            system resource manager was not started or was shut down due to an
            error.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.RmMetadataCorrupt">
            <summary>
            Error - Transaction - The metadata of the resource manager has been
            corrupted. The resource manager will not function.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.TransactionNotJoined">
            <summary>
            Error - Transaction - The resource manager attempted to prepare a
            transaction that it has not successfully joined.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.DirectoryNotRm">
            <summary>
            Error - Transaction - The specified directory does not contain a
            file system resource manager.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.CouldNotResizeLog">
            <summary>
            Error - Transaction - The log could not be set to the requested
            size.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.TransactionsUnsupportedRemote">
            <summary>
            Error - Transaction - The remote server or share does not support
            transacted file operations.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.LogResizeInvalidSize">
            <summary>
            Error - Transaction - The requested log size for the file system
            resource manager is invalid.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.RemoteFileVersionMismatch">
            <summary>
            Error - Transaction - The remote server sent mismatching version
            number or Fid for a file opened with transactions.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.CrmProtocolAlreadyExists">
            <summary>
            Error - Transaction - The resource manager tried to register a
            protocol that already exists.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.TransactionPropagationFailed">
            <summary>
            Error - Transaction - The attempt to propagate the transaction
            failed.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.CrmProtocolNotFound">
            <summary>
            Error - Transaction - The requested propagation protocol was not
            registered as a CRM.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.TransactionSuperiorExists">
            <summary>
            Error - Transaction - The transaction object already has a superior
            enlistment, and the caller attempted an operation that would have
            created a new superior. Only a single superior enlistment is
            allowed.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.TransactionRequestNotValid">
            <summary>
            Error - Transaction - The requested operation is not valid on the
            transaction object in its current state.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.TransactionNotRequested">
            <summary>
            Error - Transaction - The caller has called a response API, but the
            response is not expected because the transaction manager did not
            issue the corresponding request to the caller.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.TransactionAlreadyAborted">
            <summary>
            Error - Transaction - It is too late to perform the requested
            operation, because the transaction has already been aborted.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.TransactionAlreadyCommitted">
            <summary>
            Error - Transaction - It is too late to perform the requested
            operation, because the transaction has already been committed.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.TransactionInvalidMarshallBuffer">
            <summary>
            Error - Transaction - The buffer passed in to 
            <c>NtPushTransaction</c> or
            <c>NtPullTransaction</c> is not in a valid format.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.CurrentTransactionNotValid">
            <summary>
            Error - Transaction - The current transaction context associated
            with the thread is not a valid handle to a transaction object.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.LogGrowthFailed">
            <summary>
            Error - Transaction - An attempt to create space in the
            transactional resource manager's log failed. The failure status has
            been recorded in the event log.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.ObjectNoLongerExists">
            <summary>
            Error - Transaction - The object (file, stream, or link) that
            corresponds to the handle has been deleted by a transaction
            save-point rollback.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.StreamMiniversionNotFound">
            <summary>
            Error - Transaction - The specified file mini-version was not found
            for this transacted file open.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.StreamMiniversionNotValid">
            <summary>
            Error - Transaction - The specified file mini-version was found but
            has been invalidated. The most likely cause is a transaction
            save-point rollback.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.MiniversionInaccessibleFromSpecifiedTransaction">
            <summary>
            Error - Transaction - A mini-version can be opened only in the
            context of the transaction that created it.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.CantOpenMiniversionWithModifyIntent">
            <summary>
            Error - Transaction - It is not possible to open a mini-version with
            modify access.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.CantCreateMoreStreamMiniversions">
            <summary>
            Error - Transaction - It is not possible to create any more
            mini-versions for this stream.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.HandleNoLongerValid">
            <summary>
            Error - Transaction - The handle has been invalidated by a
            transaction. The most likely cause is the presence of memory mapping
            on a file or an open handle when the transaction ended or rolled
            back to save-point.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.NoTxfMetadata">
            <summary>
            Error - Transaction - There is no transaction metadata on the file.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.RmDisconnected">
            <summary>
            Error - Transaction - The transaction outcome is unavailable because
            the resource manager responsible for it is disconnected.
            </summary>
            <summary>
            Error - The transaction outcome is unavailable because the resource
            manager responsible for it is disconnected.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.EnlistmentNotSuperior">
            <summary>
            Error - Transaction - The request was rejected because the
            enlistment in question is not a superior enlistment.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.FileIdentityNotPersistent">
            <summary>
            Error - Transaction - The file cannot be opened in a transaction
            because its identity depends on the outcome of an unresolved
            transaction.
            </summary>
            <summary>
            Error - The file cannot be opened in a transaction because its
            identity depends on the outcome of an unresolved transaction.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.CantBreakTransactionalDependency">
            <summary>
            Error - Transaction - The operation cannot be performed because
            another transaction is depending on this property not changing.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.CantCrossRmBoundary">
            <summary>
            Error - Transaction - The operation would involve a single file with
            two transactional resource managers and is, therefore, not allowed.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.TxfDirNotEmpty">
            <summary>
            Error - Transaction - The <c>$Txf</c> directory must be empty for
            this operation to succeed.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.IndoubtTransactionsExist">
            <summary>
            Error - Transaction - The operation would leave a transactional
            resource manager in an inconsistent state and is therefore not
            allowed.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.TmVolatile">
            <summary>
            Error - Transaction - The operation could not be completed because
            the transaction manager does not have a log.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.RollbackTimerExpired">
            <summary>
            Error - Transaction - A rollback could not be scheduled because a
            previously scheduled rollback has already executed or been queued
            for execution.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.TxfAttributeCorrupt">
            <summary>
            Error - Transaction - The transactional metadata attribute on the
            file or directory is corrupt and unreadable.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.EfsNotAllowedInTransaction">
            <summary>
            Error - Transaction - The encryption operation could not be
            completed because a transaction is active.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.TransactionalOpenNotAllowed">
            <summary>
            Error - Transaction - This object is not allowed to be opened in a
            transaction.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.TransactedMappingUnsupportedRemote">
            <summary>
            Error - Transaction - Memory mapping (creating a mapped section) a
            remote file under a transaction is not supported.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.TransactionRequiredPromotion">
            <summary>
            Error - Transaction - Promotion was required to allow the resource
            manager to enlist, but the transaction was set to disallow it.
            </summary>
            <summary>
            Error - Promotion was required to allow the resource manager to
            enlist, but the transaction was set to disallow it.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.CannotExecuteFileInTransaction">
            <summary>
            Error - Transaction - This file is open for modification in an
            unresolved transaction and can be opened for execute only by a
            transacted reader.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.TransactionsNotFrozen">
            <summary>
            Error - Transaction - The request to thaw frozen transactions was
            ignored because transactions were not previously frozen.
            </summary>
        </member>
        <member name="F:DokanNet.NtStatus.MaximumNtStatus">
            <summary>
            Maximal value
            </summary>
        </member>
        <member name="T:DokanNet.FormatProviders">
            <summary>
            Provide support to format object with <c>null</c>.
            </summary>
        </member>
        <member name="F:DokanNet.FormatProviders.DefaultFormatProvider">
            <summary>
            A Singleton instance of this class.
            </summary>
        </member>
        <member name="F:DokanNet.FormatProviders.NullStringRepresentation">
            <summary>
            A constant string that represents what to use if the formated object is <c>null</c>.
            </summary>
        </member>
        <member name="M:DokanNet.FormatProviders.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:DokanNet.FormatProviders"/> class from being created. 
            </summary>
        </member>
        <member name="M:DokanNet.FormatProviders.DokanFormat(System.FormattableString)">
            <summary>
            Format a <see cref="T:System.FormattableString"/> using <see cref="F:DokanNet.FormatProviders.DefaultFormatProvider"/>.
            </summary>
            <param name="formattable">The <see cref="T:System.FormattableString"/> to format.</param>
            <returns>The formated string.</returns>
        </member>
        <member name="M:DokanNet.FormatProviders.GetFormat(System.Type)">
            <summary>
            Returns an object that provides formatting services for the
            specified type.
            </summary>
            <returns>An instance of the object specified by 
            <paramref name="formatType" />, if the 
            <see cref="T:System.IFormatProvider" /> implementation can supply
            that type of object; otherwise, <c>null</c>.</returns>
            <param name="formatType">An object that specifies the type of format
            object to return. </param>
        </member>
        <member name="M:DokanNet.FormatProviders.Format(System.String,System.Object,System.IFormatProvider)">
            <summary>
            Converts the value of a specified object to an equivalent string
            representation using specified format and culture-specific
            formatting information.
            </summary>
            <returns>The string representation of the value of 
            <paramref name="arg" />, formatted as specified by 
            <paramref name="format" /> and <paramref name="formatProvider" />.
            </returns>
            <param name="format">A format string containing formatting
            specifications. </param>
            <param name="arg">An object to format. </param>
            <param name="formatProvider">An object that supplies format
            information about the current instance. </param>
        </member>
        <member name="T:DokanNet.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:DokanNet.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:DokanNet.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:DokanNet.Properties.Resources.ErrorAssignDriveLetter">
            <summary>
              Looks up a localized string similar to Can&apos;t assign a drive letter or mount point.
            </summary>
        </member>
        <member name="P:DokanNet.Properties.Resources.ErrorBadDriveLetter">
            <summary>
              Looks up a localized string similar to Bad drive letter.
            </summary>
        </member>
        <member name="P:DokanNet.Properties.Resources.ErrorDokan">
            <summary>
              Looks up a localized string similar to Dokan error.
            </summary>
        </member>
        <member name="P:DokanNet.Properties.Resources.ErrorDriverInstall">
            <summary>
              Looks up a localized string similar to Can&apos;t install the Dokan driver.
            </summary>
        </member>
        <member name="P:DokanNet.Properties.Resources.ErrorMountPointInvalid">
            <summary>
              Looks up a localized string similar to Mount point is invalid.
            </summary>
        </member>
        <member name="P:DokanNet.Properties.Resources.ErrorStart">
            <summary>
              Looks up a localized string similar to Something&apos;s wrong with the Dokan driver.
            </summary>
        </member>
        <member name="P:DokanNet.Properties.Resources.ErrorUnknown">
            <summary>
              Looks up a localized string similar to Unknown error.
            </summary>
        </member>
        <member name="P:DokanNet.Properties.Resources.ErrorVersion">
            <summary>
              Looks up a localized string similar to Version error.
            </summary>
        </member>
    </members>
</doc>
